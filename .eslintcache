[{"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\index.tsx":"1","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\TopBar.tsx":"2","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\DashboardConfig.ts":"3","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\TopBarStyles.ts":"4","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Home.tsx":"5","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Upload.tsx":"6","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\LayoutStyles.ts":"7","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\AuthConfig.ts":"8","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Drawer.tsx":"9","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Students.tsx":"10","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\Routes.ts":"11","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Login.tsx":"12","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Layout.tsx":"13","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Profile.tsx":"14","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\UserContext.tsx":"15","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\FileUpload.tsx":"16","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\UploadContext.tsx":"17","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\App.tsx":"18","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\UploadedDataCheck.tsx":"19","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\FileUploadStyles.ts":"20","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\FileController.ts":"21","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\UserController.ts":"22","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\StudentCard.tsx":"23","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\StudentController.ts":"24","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\AppContext.tsx":"25","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\StudentPage.tsx":"26","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\LineGraph.tsx":"27","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\PieChart.tsx":"28","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Courses.tsx":"29","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\Theme.ts":"30","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\CourseController.ts":"31","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\CourseVisulisations.tsx":"32","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\CoursePie.tsx":"33","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\CourseBar.tsx":"34","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\HeatMap.tsx":"35","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\ScatterDiagram.tsx":"36","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\GraphDialog.tsx":"37","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\CoursesStyles.ts":"38","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\StudentsStyles.ts":"39","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Email.tsx":"40","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\CommunicationController.ts":"41","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\StepperStyles.ts":"42","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\assets\\FilterIcon.tsx":"43"},{"size":544,"mtime":1610851140855,"results":"44","hashOfConfig":"45"},{"size":2136,"mtime":1611789525908,"results":"46","hashOfConfig":"45"},{"size":128,"mtime":1610851140851,"results":"47","hashOfConfig":"45"},{"size":1661,"mtime":1610851140858,"results":"48","hashOfConfig":"45"},{"size":145,"mtime":1611786467063,"results":"49","hashOfConfig":"45"},{"size":3615,"mtime":1611520088919,"results":"50","hashOfConfig":"45"},{"size":1334,"mtime":1610851140857,"results":"51","hashOfConfig":"45"},{"size":334,"mtime":1611520088915,"results":"52","hashOfConfig":"45"},{"size":1195,"mtime":1611229003724,"results":"53","hashOfConfig":"45"},{"size":4802,"mtime":1613058614268,"results":"54","hashOfConfig":"45"},{"size":758,"mtime":1612919867669,"results":"55","hashOfConfig":"45"},{"size":1725,"mtime":1610851140860,"results":"56","hashOfConfig":"45"},{"size":2529,"mtime":1612919277654,"results":"57","hashOfConfig":"45"},{"size":2199,"mtime":1610851140848,"results":"58","hashOfConfig":"45"},{"size":551,"mtime":1610851140853,"results":"59","hashOfConfig":"45"},{"size":3092,"mtime":1612104198322,"results":"60","hashOfConfig":"45"},{"size":945,"mtime":1612094553146,"results":"61","hashOfConfig":"45"},{"size":825,"mtime":1611304199160,"results":"62","hashOfConfig":"45"},{"size":2381,"mtime":1612919867667,"results":"63","hashOfConfig":"45"},{"size":331,"mtime":1612726723330,"results":"64","hashOfConfig":"45"},{"size":588,"mtime":1612096446652,"results":"65","hashOfConfig":"45"},{"size":499,"mtime":1611326685780,"results":"66","hashOfConfig":"45"},{"size":937,"mtime":1612896652443,"results":"67","hashOfConfig":"45"},{"size":1753,"mtime":1613055893579,"results":"68","hashOfConfig":"45"},{"size":460,"mtime":1611789525910,"results":"69","hashOfConfig":"45"},{"size":10960,"mtime":1612924513988,"results":"70","hashOfConfig":"45"},{"size":1291,"mtime":1612727892218,"results":"71","hashOfConfig":"45"},{"size":1963,"mtime":1612919867664,"results":"72","hashOfConfig":"45"},{"size":3807,"mtime":1612919867682,"results":"73","hashOfConfig":"45"},{"size":261,"mtime":1611282321104,"results":"74","hashOfConfig":"45"},{"size":1838,"mtime":1612919867651,"results":"75","hashOfConfig":"45"},{"size":6185,"mtime":1612714639660,"results":"76","hashOfConfig":"45"},{"size":1467,"mtime":1612919867654,"results":"77","hashOfConfig":"45"},{"size":1410,"mtime":1612919867653,"results":"78","hashOfConfig":"45"},{"size":1557,"mtime":1613144824636,"results":"79","hashOfConfig":"45"},{"size":1949,"mtime":1612918748385,"results":"80","hashOfConfig":"45"},{"size":583,"mtime":1612713241871,"results":"81","hashOfConfig":"45"},{"size":760,"mtime":1612919867679,"results":"82","hashOfConfig":"45"},{"size":826,"mtime":1613050421475,"results":"83","hashOfConfig":"45"},{"size":3636,"mtime":1613126400984,"results":"84","hashOfConfig":"45"},{"size":899,"mtime":1612919957016,"results":"85","hashOfConfig":"45"},{"size":392,"mtime":1611326685791,"results":"86","hashOfConfig":"45"},{"size":499,"mtime":1612919867652,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1orxqso",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\index.tsx",[],["186","187"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\TopBar.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\DashboardConfig.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\TopBarStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Home.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Upload.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\LayoutStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\AuthConfig.ts",[],["188","189"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Drawer.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Students.tsx",["190","191"],"import React, { useEffect, useState } from \"react\";\r\nimport { Box, ButtonBase, Chip, Divider, Drawer, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport StudentCard from \"../components/StudentCard\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport StudentController from \"../api/StudentController\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { useContext } from \"react\";\r\nimport StudentPage from \"../models/StudentPage\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport StudentsStyles from \"../styles/StudentsStyles\";\r\nimport FilterIcon from \"../assets/FilterIcon\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CourseResponse from \"../models/CourseResponse\";\r\nimport CourseController from \"../api/CourseController\";\r\n\r\nconst Students = () => {\r\n  const classes = StudentsStyles();\r\n  const Auth0 = useAuth0();\r\n  const [pages, setPages] = useState(0);\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [students, setStudents] = useState<StudentPage[]>();\r\n  const [filterDrawer, setFilterDrawer] = useState(false);\r\n  const [textInput, setTextInput] = useState('');\r\n  const [chipData, setChipData] = useState<CourseResponse[]>([]);\r\n  const [courses, setCourses] = useState<CourseResponse[]>([]);\r\n  const controller = new StudentController();\r\n  const courseController = new CourseController();\r\n  const appContext = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    setPagesCount().then(() => GetStudents());\r\n  },[appContext.searchBarValue, chipData]);\r\n  \r\n  useEffect(() => {\r\n    GetCourses();\r\n    GetStudents();\r\n  },[currPage,chipData])\r\n\r\n  const setPagesCount = async() => {\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    setPages(Math.ceil(await controller.GetStudentCount(appContext.searchBarValue, chipData, token)/12))\r\n  }\r\n  \r\n  const GetStudents = async() => {\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    setStudents(await controller.GetStudentsPage(currPage, appContext.searchBarValue, chipData, token));\r\n  }\r\n\r\n  const GetCourses = async () => {\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    setCourses(await courseController.GetAllCourses(token));\r\n  };\r\n\r\n  const handleCourseFilter = (course: CourseResponse | null) => {\r\n    if(course){\r\n      setChipData(chipData => [...chipData, course]);      \r\n      setTextInput('');\r\n    }\r\n  };\r\n  \r\n  const handleChipDelete = (course: CourseResponse) => {\r\n    setChipData(chipData.filter(c => c.courseCode !== course.courseCode));\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {students ? \r\n      <>\r\n        <Grid container spacing={3}>\r\n          <Grid xs={12} className={classes.title}>\r\n            <Typography variant=\"h4\">Students</Typography>\r\n          </Grid>\r\n          <Grid xs={12}>\r\n              <ButtonBase onClick={() => setFilterDrawer(true)}>\r\n                <FilterIcon />\r\n              </ButtonBase>\r\n            </Grid>\r\n          {students.map(student => (\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n              <StudentCard studentId={student.userId}/>\r\n            </Grid>\r\n          ))}\r\n          <Grid xs={12} className={classes.pagination}>\r\n            <Pagination count={pages} variant=\"outlined\" onChange={(event, value) => setCurrPage(value)}/>\r\n          </Grid>\r\n        </Grid>\r\n        <Drawer variant=\"temporary\" anchor={\"right\"} \r\n        open={filterDrawer} \r\n        classes={{paper: classes.drawerPaper}} \r\n        onClose={() => setFilterDrawer(false)} \r\n      >\r\n        <Grid >\r\n          <Grid xs={12} className={classes.filterStudentsTitle}>\r\n            <Typography variant=\"h5\" align=\"center\">Filter Students by Course</Typography>\r\n          </Grid>\r\n          <Grid container xs={12} className={classes.search}>\r\n            <Autocomplete\r\n              options={courses}\r\n              getOptionLabel={(course) => course.courseTitle}\r\n              className={classes.autoComplete}\r\n              onChange={(event, value, reason) => handleCourseFilter(value ?? null)}\r\n              renderInput={(params) => \r\n                (\r\n                  <TextField {...params} label=\"Courses\" variant=\"outlined\" />\r\n                )}\r\n              inputValue={textInput}\r\n            />\r\n          </Grid>\r\n          <Divider />\r\n          <Box className={classes.chips}>\r\n            {chipData.map((course) => (\r\n              <Chip label={course.courseTitle} className={classes.chipStyle}  onDelete={() => handleChipDelete(course)} />\r\n              ))}\r\n          </Box>\r\n        </Grid>\r\n      </Drawer>\r\n      </>\r\n    :\r\n      <div className={classes.loading} color=\"secondary\">\r\n        <CircularProgress size={100} />\r\n      </div>\r\n    }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Students;","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\Routes.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Login.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Layout.tsx",["192"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Profile.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\UserContext.tsx",[],["193","194"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\FileUpload.tsx",["195","196"],"import React, { useContext, useState } from 'react'\r\nimport \"../styles/FileUpload.css\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport * as XLSX from 'xlsx';\r\nimport {parse, ParseResult} from 'papaparse';\r\nimport { Typography } from '@material-ui/core';\r\nimport { UploadContext } from '../context/UploadContext';\r\nimport UploadModel from '../models/UploadModel';\r\n\r\nconst dataHeaders = [\r\n  \"userId\",\r\n  \"studyLevel\",\r\n  \"courseYear\",\r\n  \"regStatus\",\r\n  \"courseTitle\",\r\n  \"courseCode\",\r\n  \"teaching\",\r\n  \"attended\",\r\n  \"explained\",\r\n  \"nonAttended\",\r\n  \"percentAttendance\",\r\n  \"unexcusedPercentAttendance\",\r\n  \"lastAttendance\"\r\n];\r\n\r\n\r\nfunction FileUpload() {\r\n    const uploadContext = useContext(UploadContext)\r\n    async function handleUpload(e: React.DragEvent){\r\n        e.preventDefault();\r\n        const file = await e.dataTransfer.files[0];\r\n        if(file.name.split('.')[1] === 'csv'){\r\n          let csv = await file.text();\r\n          let csvRows = csv.split(\"\\n\");\r\n          csvRows[0] = dataHeaders.join();\r\n          csv = csvRows.join(\"\\n\");\r\n          const parseResponse = parse(csv, {header:true}).data;\r\n          const parsedData : UploadModel[] = parseResponse.map((row:any,i) => {\r\n            const newRow : UploadModel = {\r\n              id: i,\r\n              userId: parseInt(row.userId),\r\n              studyLevel: row.studyLevel,\r\n              courseYear: row.courseYear,\r\n              regStatus: row.regStatus,\r\n              courseTitle: row.courseTitle,\r\n              courseCode: row.courseCode,\r\n              teaching: parseInt(row.teaching),\r\n              attended: parseInt(row.attended),\r\n              explained: parseInt(row.explained),\r\n              nonAttended: parseInt(row.nonAttended),\r\n              percentAttendance: parseFloat(row.percentAttendance),\r\n              unexcusedPercentAttendance: parseFloat(row.unexcusedPercentAttendance),\r\n              lastAttendance: new Date(row.lastAttendance)\r\n            }\r\n            return newRow;\r\n          });\r\n          uploadContext.setUploadedData(parsedData)\r\n        } else if(file.name.split('.')[1] === 'xls' || file.name.split('.')[1] === 'xlsx'){\r\n          const reader = new FileReader();\r\n          reader.onload = e => {\r\n            let data = e.target?.result;\r\n            let workbookData = XLSX.read(data, {type: 'binary', cellDates: true});\r\n            const worksheet = workbookData.Sheets[workbookData.SheetNames[0]];\r\n            let parsedData : UploadModel[] = XLSX.utils.sheet_to_json(worksheet , {header: dataHeaders, range:1});\r\n            uploadContext.setUploadedData(parsedData)\r\n          }\r\n          reader.readAsBinaryString(file);\r\n        }\r\n      }\r\n    return (\r\n        <div className=\"upload\"\r\n          onDragOver={e => e.preventDefault()}\r\n          onDrop={handleUpload}\r\n        >\r\n            <CloudUploadIcon fontSize=\"large\"/>\r\n            <Typography>{uploadContext.uploadedData.length === 0 ? \"File not uploaded\" : \"File uploaded\"}</Typography>            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default FileUpload\r\n",["197","198"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\UploadContext.tsx",[],["199","200"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\App.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\UploadedDataCheck.tsx",["201"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\FileUploadStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\FileController.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\UserController.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\StudentCard.tsx",[],["202","203"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\StudentController.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\AppContext.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\StudentPage.tsx",["204","205"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport StudentController from '../api/StudentController';\r\nimport Student from '../models/Student'\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { Avatar, Box, ButtonBase, Card, CircularProgress, Grid, Hidden, Tabs, Typography } from '@material-ui/core';\r\nimport {Bookmark, Fullscreen, MailOutline, PersonRounded, Phone, SchoolRounded} from '@material-ui/icons';\r\nimport PieChart from './PieChart';\r\nimport LineGraph from './LineGraph';\r\nimport GraphDialog from './GraphDialog';\r\nimport Email from './Email';\r\nimport { Tab } from '@material-ui/core';\r\n\r\nfunction StudentPage(props:any) {\r\n    const Auth0 = useAuth0();\r\n    const controller = new StudentController();\r\n    const history = useHistory();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [data, setData] = useState<Student>();\r\n    const [bigGraph, setBigGraph] = useState(\"\");\r\n    const tabs = [\"Profile\",\"Communication\"];\r\n    const [tab, setTab] = useState('profile');\r\n\r\n    useEffect(() => {        \r\n        fetchData();\r\n    },[])\r\n\r\n    async function fetchData(){        \r\n        const token = await Auth0.getAccessTokenSilently();\r\n        const response = await controller.GetStudent(props.match.params.student, token);\r\n        if(response){\r\n            setData(await response)\r\n        }else if(response == false){\r\n            history.push(\"/students\");\r\n            enqueueSnackbar('Student not found!', { variant: \"error\" });\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <div>\r\n            {data ? \r\n                <>\r\n                    {bigGraph ? \r\n                        <GraphDialog open={true} closeDialog={() => setBigGraph(\"\")}>\r\n                            {bigGraph === \"pie\" ?\r\n                                <div style={{ height: \"29rem\", width: \"100%\" }}>\r\n                                    <PieChart data={data.studentData}/>\r\n                                </div> \r\n                            : bigGraph === \"line\" ?\r\n                                <div style={{ height: \"29rem\", width: \"100%\" }}>\r\n                                    <LineGraph data={data.studentData}/>\r\n                                </div> \r\n                            :<></>\r\n                            }\r\n                        </GraphDialog>\r\n                        : \r\n                        <>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item style={{display: 'flex', width: '100%'}}>\r\n                                    <Avatar style={{ height: '70px', width: '70px', fontSize: '40px' }}>ML</Avatar>\r\n                                        <Grid container style={{width: '100%', justifyContent: 'space-between'}}>\r\n                                            <Grid xs={12} md={8} >\r\n                                                <Box style={{marginLeft: '2%'}}>\r\n                                                    <Typography>Student</Typography>\r\n                                                    <Typography>University of Sussex</Typography>\r\n                                                    <Typography>Registered</Typography>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                            <Hidden smDown>\r\n                                                <Grid xs={12} md={4} style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                                                    <Box>\r\n                                                        <Typography>Last Contact: 01/02/2021</Typography>\r\n                                                    </Box>\r\n                                                </Grid>\r\n                                            </Hidden>\r\n                                            <Hidden mdUp>\r\n                                                <Grid xs={12} md={4} style={{display: 'flex',marginLeft: '2%', justifyContent: 'flex-start'}}>\r\n                                                    <Box>\r\n                                                        <Typography>Last Contact: 01/02/2021</Typography>\r\n                                                    </Box>\r\n                                                </Grid>\r\n                                            </Hidden>\r\n                                        </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container xs={12}>\r\n                                <Tabs\r\n                                    // value={value}\r\n                                    onChange={(event, value) => setTab(tabs[value])}\r\n                                    indicatorColor='primary'\r\n                                    textColor='primary'\r\n                                    variant='scrollable'\r\n                                    scrollButtons='auto'\r\n                                    aria-label='scrollable auto tabs example'\r\n                                    // className={classes.tabsPortfolio}\r\n                                        >\r\n                                    {tabs.map((tab, index) => {\r\n                                    return (\r\n                                        <Tab\r\n                                        key={index}\r\n                                        //   className={classes.tab}\r\n                                        label={tab}\r\n                                        />\r\n                                    );\r\n                                    })}\r\n                                </Tabs>\r\n                            </Grid>\r\n                            {tab === 'Communication' ? <Email /> :\r\n                            <>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12} md={6}>\r\n                                <Card>\r\n                                    <Box style={{margin: '1rem'}}>\r\n                                        <Typography variant=\"subtitle1\">Course Details:</Typography>\r\n                                        <Grid container style={{margin: '2% 0'}}>\r\n                                            <PersonRounded />\r\n                                            <Typography style={{marginLeft: '1%'}}>#{data.userId}</Typography>\r\n                                        </Grid>\r\n                                        <Grid container>\r\n                                            <SchoolRounded />\r\n                                            <Typography style={{marginLeft: '1%'}}>{data.courseTitle} ({data.courseCode})</Typography>\r\n                                        </Grid>\r\n                                        <Grid container style={{margin: '2% 0'}}>\r\n                                            <Bookmark />\r\n                                            <Typography style={{marginLeft: '1%'}}>{data.studyLevel}</Typography>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Card>\r\n                                </Grid>\r\n                                <Grid item xs={12} md={6}>\r\n                                    <Card>\r\n                                        <Box style={{margin: '1rem'}}>\r\n                                            <Typography variant=\"subtitle1\">Contact Details:</Typography>\r\n                                            <Grid container style={{margin: '2% 0'}}>\r\n                                                <MailOutline />\r\n                                                <Typography style={{marginLeft: '1%'}} variant=\"body2\">ml553@sussex.ac.uk</Typography>\r\n                                            </Grid>\r\n                                            <Grid container >\r\n                                                <Phone />\r\n                                                <Typography style={{marginLeft: '1%'}} variant=\"body2\">+447305613249</Typography>\r\n                                            </Grid>\r\n                                        </Box>\r\n                                    </Card>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12} lg={6} >\r\n                                    <Card>\r\n                                        <Box style={{display: 'flex',justifyContent: 'flex-end'}}>\r\n                                            <ButtonBase onClick={() => setBigGraph(\"line\")}>\r\n                                                <Fullscreen />\r\n                                            </ButtonBase>\r\n                                        </Box>\r\n                                        <div style={{margin: '1rem'}}>\r\n                                            <Typography style={{textAlign: 'center', marginBottom: '2%'}} variant=\"h5\">Attendance By Period (%)</Typography>\r\n                                            <div style={{height: '19rem'}}>\r\n                                                <LineGraph data={data.studentData}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card>\r\n                                </Grid>\r\n                                <Grid item xs={12} lg={6} >\r\n                                    <Card>\r\n                                        <Box style={{display: 'flex',justifyContent: 'flex-end'}}>\r\n                                            <ButtonBase onClick={() => setBigGraph(\"pie\")}>\r\n                                                <Fullscreen />\r\n                                            </ButtonBase>\r\n                                        </Box>\r\n                                        <div style={{margin: '1rem'}}>\r\n                                            <Typography style={{textAlign: 'center', marginBottom: '2%'}} variant=\"h5\">Overall Attendance</Typography>\r\n                                            <div style={{height: '19rem' , width: '100%'}}>\r\n                                                <PieChart data={data.studentData}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card>\r\n                                </Grid>\r\n                            </Grid>\r\n                            </> }                   \r\n                        </>\r\n                    }\r\n                </>\r\n            :\r\n                <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}} color=\"secondary\">\r\n                    <CircularProgress size={100} />\r\n                </div>\r\n            }           \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StudentPage\r\n\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\LineGraph.tsx",["206","207"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\PieChart.tsx",["208","209"],"import { ResponsivePie } from \"@nivo/pie\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport StudentData from \"../models/StudentData\";\r\n\r\ninterface PieChartProps {\r\n  data: StudentData[]\r\n}\r\n\r\nexport default function PieChart(props: PieChartProps) {\r\n  const [data, setData] = useState([\r\n    {id: \"Attended\",label: \"Attended\", value: 0, color: \"hsl(174, 70%, 50%)\"},\r\n    {id: \"Teaching\",label: \"Teaching\", value: 0, color: \"hsl(204, 70%, 50%)\"},\r\n    {id: \"Explained\",label: \"Explained\", value: 0, color: \"hsl(234, 70%, 50%)\"},\r\n    {id: \"Non-Attended\",label: \"Non-Attended\", value: 0, color: \"hsl(254, 70%, 50%)\"}\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    props.data.map(item => {\r\n      setData(data => [\r\n        {id: \"Attended\",label: \"Attended\", value: data[0].value + item.attended, color: \"hsl(174, 70%, 50%)\"},\r\n        {id: \"Teaching\",label: \"Teaching\", value: data[1].value + item.teaching, color: \"hsl(204, 70%, 50%)\"},\r\n        {id: \"Explained\",label: \"Explained\", value: data[2].value + item.explained, color: \"hsl(234, 70%, 50%)\"},\r\n        {id: \"Non-Attended\",label: \"Non-Attended\", value: data[3].value + item.nonAttended, color: \"hsl(254, 70%, 50%)\"}\r\n      ])\r\n    })\r\n  },[])\r\n\r\n\r\n  return (\r\n      <ResponsivePie\r\n        data={data}\r\n        //@ts-ignore\r\n        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\r\n        enableRadialLabels={false}\r\n        sliceLabelsSkipAngle={1}\r\n        sliceLabelsTextColor=\"#ffffff\"\r\n        colors={{ scheme: \"category10\" }}\r\n        margin={{bottom:60,}}\r\n        legends={[\r\n          {\r\n              anchor: 'bottom',\r\n              direction: 'row',\r\n              justify: false,\r\n              translateX: 0,\r\n              translateY: 20,\r\n              itemWidth: 80,\r\n              itemHeight: 0,\r\n              itemsSpacing: 0,\r\n              symbolSize: 20,\r\n              itemDirection: 'left-to-right'\r\n          }\r\n      ]}\r\n      />\r\n  );\r\n}\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Courses.tsx",["210","211"],"import React, { useEffect, useState } from \"react\";\r\nimport { Box, ButtonBase, Chip, Divider, Drawer, Grid, SvgIcon, TextField, Typography, } from \"@material-ui/core\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport CourseResponse from \"../models/CourseResponse\";\r\nimport CourseController from \"../api/CourseController\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport CourseVisulisations from \"../components/CourseVisulisations\";\r\nimport CoursesStyles from \"../styles/CoursesStyles\";\r\nimport FilterIcon from \"../assets/FilterIcon\";\r\n\r\nconst Students = () => {\r\n  const Auth0 = useAuth0();\r\n  const [textInput, setTextInput] = useState('');\r\n  const [courses, setCourses] = useState<CourseResponse[]>();\r\n  const [chipData, setChipData] = useState<CourseResponse[]>([]);\r\n  const controller = new CourseController();\r\n  const classes = CoursesStyles();\r\n  const [filterDrawer, setFilterDrawer] = useState(false);\r\n\r\n  useEffect(() => {\r\n    GetCourses();\r\n  }, []);\r\n\r\n  const GetCourses = async () => {\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    setCourses(await controller.GetAllCourses(token));\r\n  };\r\n\r\n  const handleCourseFilter = (course: CourseResponse | null) => {\r\n    if (course) {\r\n      const newCourses = courses?.filter(\r\n        (c) => c.courseCode !== course.courseCode\r\n      );\r\n      setCourses(newCourses);\r\n      setChipData((chipData) => [...chipData, course]);\r\n      setTextInput(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChipDelete = (course: CourseResponse) => {\r\n    setChipData(chipData.filter(c => c.courseCode !== course.courseCode));\r\n    let courseArr = [course];\r\n    let newCourses = [...courses!];\r\n    newCourses = courseArr.concat(newCourses);\r\n    setCourses(newCourses);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {courses ? (\r\n        <Grid container spacing={3}>\r\n          <Grid xs={12} className={classes.title}>\r\n            <Typography variant=\"h4\">Courses</Typography>\r\n          </Grid>\r\n          <Grid xs={12}>\r\n            <ButtonBase onClick={() => setFilterDrawer(true)}>\r\n              <FilterIcon />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Drawer variant=\"temporary\" anchor={\"right\"} \r\n            open={filterDrawer} \r\n            classes={{paper: classes.drawerPaper}} \r\n            onClose={() => setFilterDrawer(false)} \r\n          >\r\n            <Grid >\r\n              <Grid xs={12} className={classes.filterCoursesTitle}>\r\n                <Typography variant=\"h5\" align=\"center\">Filter Courses</Typography>\r\n              </Grid>\r\n              <Grid container xs={12} className={classes.search}>\r\n                <Autocomplete\r\n                  options={courses}\r\n                  getOptionLabel={(course) => course.courseTitle}\r\n                  className={classes.autoComplete}\r\n                  onChange={(event, value, reason) => handleCourseFilter(value ?? null)}\r\n                  renderInput={(params) => \r\n                    (\r\n                      <TextField {...params} label=\"Courses\" variant=\"outlined\" />\r\n                    )}\r\n                  inputValue={textInput}\r\n                />\r\n              </Grid>\r\n              <Divider />\r\n              <Box className={classes.chips}>\r\n                {chipData.map((course) => (\r\n                  <Chip label={course.courseTitle} className={classes.chipStyle}  onDelete={() => handleChipDelete(course)} />\r\n                  ))}\r\n              </Box>\r\n            </Grid>\r\n          </Drawer>\r\n          <CourseVisulisations courses={chipData}/>\r\n        </Grid>\r\n      ) : (\r\n        <div className={classes.loading} color=\"secondary\">\r\n          <CircularProgress size={100} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Students;\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\Theme.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\CourseController.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\CourseVisulisations.tsx",["212","213","214","215","216"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\CoursePie.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\CourseBar.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\HeatMap.tsx",["217","218","219"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\ScatterDiagram.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\GraphDialog.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\CoursesStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\StudentsStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Email.tsx",["220"],"import { Button, Dialog, DialogContent, DialogTitle, TextField } from \"@material-ui/core\";\r\nimport { Star, Work } from \"@material-ui/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { VerticalTimeline, VerticalTimelineElement } from \"react-vertical-timeline-component\";\r\nimport \"react-vertical-timeline-component/style.min.css\";\r\nimport { useSnackbar } from 'notistack';\r\nimport CommunicationController from \"../api/CommunicationController\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nfunction Email() {\r\n  const Auth0 = useAuth0();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [openNewEmailDialog, setNewEmailDialog] = useState(false);\r\n  const controller = new CommunicationController(); \r\n  const [data, setData] = useState([]); \r\n  const [emailContent, setEmailContent] = useState('');\r\n\r\n  useEffect(() => {\r\n    GetEmails();\r\n  },[]);\r\n\r\n  async function GetEmails(){\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    let res = await controller.GetConversations(token,\"mari6n7795@gmail.com\");\r\n    res = res.reverse();\r\n    setData(res);\r\n}\r\n\r\nasync function sendEmail(){\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    const res = await controller.SendEmail(token,{\r\n        fromName:\"AttendancePro\",\r\n        fromEmail:\"admin@em2322.attendancepro.co.uk\",\r\n        toName:\"Marion\",\r\n        toEmail:\"mari6n7795@gmail.com\",\r\n        subject:\"React Email\",\r\n        content:`${emailContent}`,\r\n        htmlContent:`<strong>${emailContent}</strong>`\r\n    });\r\n    if(res){\r\n        enqueueSnackbar('Email sent!', { variant: \"success\" });\r\n        GetEmails();\r\n    }else{\r\n        enqueueSnackbar('Error occurred!', { variant: \"error\" });\r\n    }\r\n    setNewEmailDialog(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={() => setNewEmailDialog(true)} style={{marginTop: '5px'}}>\r\n      Send New Email\r\n      </Button>\r\n      <VerticalTimeline>\r\n        {data.map((email:any,i) => (\r\n            <VerticalTimelineElement\r\n            className=\"vertical-timeline-element--work\"\r\n            contentStyle={{ background: \"rgb(33, 150, 243)\", color: \"#fff\" }}\r\n            contentArrowStyle={{ borderRight: \"7px solid  rgb(33, 150, 243)\" }}\r\n            date=\"2011 - present\"\r\n            iconStyle={{ background: \"rgb(33, 150, 243)\", color: \"#fff\" }}\r\n            icon={<Work />}\r\n            >\r\n            <h3 className=\"vertical-timeline-element-title\">{i % 2 === 0 ? 'Student' : 'Staff'}</h3>\r\n            <h4 className=\"vertical-timeline-element-subtitle\">University of Sussex</h4>\r\n            <p>{email.content}</p>\r\n            </VerticalTimelineElement>\r\n        ))}\r\n        <VerticalTimelineElement\r\n          iconStyle={{ background: \"rgb(16, 204, 82)\", color: \"#fff\" }}\r\n          icon={<Star />}\r\n        />\r\n      </VerticalTimeline>\r\n      <Dialog open={openNewEmailDialog} onClose={() => setNewEmailDialog(false)} aria-labelledby=\"form-dialog-title\" fullWidth>\r\n        <DialogTitle id=\"form-dialog-title\">New Email</DialogTitle>\r\n        <DialogContent>\r\n            <TextField\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Email\"\r\n            multiline\r\n            rows={8}\r\n            defaultValue=\"Dear Student,\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={(e) => setEmailContent(e.target.value)}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" style={{marginTop: '20px'}} onClick={sendEmail}>\r\n            Send\r\n            </Button>\r\n        </DialogContent>\r\n       </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Email;\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\CommunicationController.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\StepperStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\assets\\FilterIcon.tsx",[],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"221","replacedBy":"225"},{"ruleId":"223","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":33,"column":5,"nodeType":"229","endLine":33,"endColumn":42,"suggestions":"230"},{"ruleId":"227","severity":1,"message":"231","line":38,"column":5,"nodeType":"229","endLine":38,"endColumn":24,"suggestions":"232"},{"ruleId":"233","severity":1,"message":"234","line":14,"column":9,"nodeType":"235","messageId":"236","endLine":14,"endColumn":14},{"ruleId":"221","replacedBy":"237"},{"ruleId":"223","replacedBy":"238"},{"ruleId":"233","severity":1,"message":"239","line":1,"column":29,"nodeType":"235","messageId":"236","endLine":1,"endColumn":37},{"ruleId":"233","severity":1,"message":"240","line":5,"column":16,"nodeType":"235","messageId":"236","endLine":5,"endColumn":27},{"ruleId":"221","replacedBy":"241"},{"ruleId":"223","replacedBy":"242"},{"ruleId":"221","replacedBy":"243"},{"ruleId":"223","replacedBy":"244"},{"ruleId":"227","severity":1,"message":"245","line":46,"column":5,"nodeType":"229","endLine":46,"endColumn":7,"suggestions":"246"},{"ruleId":"221","replacedBy":"247"},{"ruleId":"223","replacedBy":"248"},{"ruleId":"227","severity":1,"message":"249","line":27,"column":7,"nodeType":"229","endLine":27,"endColumn":9,"suggestions":"250"},{"ruleId":"251","severity":1,"message":"252","line":34,"column":27,"nodeType":"253","messageId":"254","endLine":34,"endColumn":29},{"ruleId":"255","severity":1,"message":"256","line":14,"column":33,"nodeType":"257","messageId":"258","endLine":14,"endColumn":35},{"ruleId":"227","severity":1,"message":"259","line":17,"column":7,"nodeType":"229","endLine":17,"endColumn":9,"suggestions":"260"},{"ruleId":"255","severity":1,"message":"256","line":18,"column":25,"nodeType":"257","messageId":"258","endLine":18,"endColumn":27},{"ruleId":"227","severity":1,"message":"259","line":26,"column":5,"nodeType":"229","endLine":26,"endColumn":7,"suggestions":"261"},{"ruleId":"233","severity":1,"message":"262","line":2,"column":56,"nodeType":"235","messageId":"236","endLine":2,"endColumn":63},{"ruleId":"227","severity":1,"message":"263","line":23,"column":6,"nodeType":"229","endLine":23,"endColumn":8,"suggestions":"264"},{"ruleId":"233","severity":1,"message":"265","line":15,"column":10,"nodeType":"235","messageId":"236","endLine":15,"endColumn":21},{"ruleId":"227","severity":1,"message":"266","line":39,"column":6,"nodeType":"229","endLine":39,"endColumn":21,"suggestions":"267"},{"ruleId":"255","severity":1,"message":"256","line":54,"column":35,"nodeType":"257","messageId":"258","endLine":54,"endColumn":37},{"ruleId":"255","severity":1,"message":"256","line":58,"column":36,"nodeType":"257","messageId":"258","endLine":58,"endColumn":38},{"ruleId":"255","severity":1,"message":"256","line":80,"column":26,"nodeType":"257","messageId":"258","endLine":80,"endColumn":28},{"ruleId":"255","severity":1,"message":"256","line":16,"column":27,"nodeType":"257","messageId":"258","endLine":16,"endColumn":29},{"ruleId":"255","severity":1,"message":"256","line":18,"column":37,"nodeType":"257","messageId":"258","endLine":18,"endColumn":39},{"ruleId":"227","severity":1,"message":"259","line":25,"column":7,"nodeType":"229","endLine":25,"endColumn":12,"suggestions":"268"},{"ruleId":"227","severity":1,"message":"269","line":19,"column":5,"nodeType":"229","endLine":19,"endColumn":7,"suggestions":"270"},"no-native-reassign",["271"],"no-negated-in-lhs",["272"],["271"],["272"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GetStudents' and 'setPagesCount'. Either include them or remove the dependency array.","ArrayExpression",["273"],"React Hook useEffect has missing dependencies: 'GetCourses' and 'GetStudents'. Either include them or remove the dependency array.",["274"],"@typescript-eslint/no-unused-vars","'Auth0' is assigned a value but never used.","Identifier","unusedVar",["271"],["272"],"'useState' is defined but never used.","'ParseResult' is defined but never used.",["271"],["272"],["271"],["272"],"React Hook useEffect has a missing dependency: 'uploadContext.uploadedData'. Either include it or remove the dependency array.",["275"],["271"],["272"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["276"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array.",["277"],["278"],"'SvgIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'GetCourses'. Either include it or remove the dependency array.",["279"],"'AspectRatio' is defined but never used.","React Hook useEffect has missing dependencies: 'GetAbsenceReasons', 'GetAttendanceByPeriod', and 'getAttendedByTeachingSessionsData'. Either include them or remove the dependency array.",["280"],["281"],"React Hook useEffect has a missing dependency: 'GetEmails'. Either include it or remove the dependency array.",["282"],"no-global-assign","no-unsafe-negation",{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"291","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},"Update the dependencies array to be: [GetStudents, appContext.searchBarValue, chipData, setPagesCount]",{"range":"302","text":"303"},"Update the dependencies array to be: [currPage, chipData, GetCourses, GetStudents]",{"range":"304","text":"305"},"Update the dependencies array to be: [uploadContext.uploadedData]",{"range":"306","text":"307"},"Update the dependencies array to be: [fetchData]",{"range":"308","text":"309"},"Update the dependencies array to be: [props.data]",{"range":"310","text":"311"},{"range":"312","text":"311"},"Update the dependencies array to be: [GetCourses]",{"range":"313","text":"314"},"Update the dependencies array to be: [GetAbsenceReasons, GetAttendanceByPeriod, getAttendedByTeachingSessionsData, props.courses]",{"range":"315","text":"316"},"Update the dependencies array to be: [props.data, val]",{"range":"317","text":"318"},"Update the dependencies array to be: [GetEmails]",{"range":"319","text":"320"},[1559,1596],"[GetStudents, appContext.searchBarValue, chipData, setPagesCount]",[1668,1687],"[currPage, chipData, GetCourses, GetStudents]",[2200,2202],"[uploadContext.uploadedData]",[1161,1163],"[fetchData]",[639,641],"[props.data]",[1197,1199],[1056,1058],"[GetCourses]",[1733,1748],"[GetAbsenceReasons, GetAttendanceByPeriod, getAttendedByTeachingSessionsData, props.courses]",[574,579],"[props.data, val]",[872,874],"[GetEmails]"]