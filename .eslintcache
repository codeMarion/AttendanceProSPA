[{"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Courses.tsx":"1","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\PieChart.tsx":"2","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\StudentPage.tsx":"3","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\AuthConfig.ts":"4","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\StepperStyles.ts":"5","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\StudentsStyles.ts":"6","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\PersistentAbsenteesByYearChart.tsx":"7","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\StudentsTableBody.tsx":"8","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\LineGraph.tsx":"9","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\CoursePie.tsx":"10","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\index.tsx":"11","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\UploadContext.tsx":"12","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\UserContext.tsx":"13","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Login.tsx":"14","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\Routes.ts":"15","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\LayoutStyles.ts":"16","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Drawer.tsx":"17","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\CourseContext.tsx":"18","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\HeatMap.tsx":"19","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Home.tsx":"20","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\PersistentAbsenteesByCourse.tsx":"21","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\Theme.ts":"22","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\CourseVisulisations.tsx":"23","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\UserController.ts":"24","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\StudentController.ts":"25","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\CoursesStyles.ts":"26","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\CommunicationController.ts":"27","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Upload.tsx":"28","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\assets\\FilterIcon.tsx":"29","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\GraphDialog.tsx":"30","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\AppContext.tsx":"31","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\ScatterDiagram.tsx":"32","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Students.tsx":"33","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\AbsenceStartGraph.tsx":"34","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\TopBar.tsx":"35","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Profile.tsx":"36","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\DashboardConfig.ts":"37","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\TopBarStyles.ts":"38","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\CourseController.ts":"39","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\FileUpload.tsx":"40","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\StudentCard.tsx":"41","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\CourseBar.tsx":"42","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\FileController.ts":"43","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\SmallInfo.tsx":"44","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\Email.tsx":"45","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\UploadedDataCheck.tsx":"46"},{"size":4086,"mtime":1614180804942,"results":"47","hashOfConfig":"48"},{"size":1966,"mtime":1614196754623,"results":"49","hashOfConfig":"48"},{"size":16155,"mtime":1614249808443,"results":"50","hashOfConfig":"48"},{"size":334,"mtime":1611520088915,"results":"51","hashOfConfig":"48"},{"size":392,"mtime":1611326685791,"results":"52","hashOfConfig":"48"},{"size":826,"mtime":1613336628966,"results":"53","hashOfConfig":"48"},{"size":2547,"mtime":1614180804917,"results":"54","hashOfConfig":"48"},{"size":3091,"mtime":1614197626547,"results":"55","hashOfConfig":"48"},{"size":1567,"mtime":1614198246092,"results":"56","hashOfConfig":"48"},{"size":2990,"mtime":1614257930263,"results":"57","hashOfConfig":"48"},{"size":544,"mtime":1610851140855,"results":"58","hashOfConfig":"48"},{"size":945,"mtime":1612094553146,"results":"59","hashOfConfig":"48"},{"size":551,"mtime":1610851140853,"results":"60","hashOfConfig":"48"},{"size":1725,"mtime":1610851140860,"results":"61","hashOfConfig":"48"},{"size":758,"mtime":1612919867669,"results":"62","hashOfConfig":"48"},{"size":1334,"mtime":1610851140857,"results":"63","hashOfConfig":"48"},{"size":1195,"mtime":1611229003724,"results":"64","hashOfConfig":"48"},{"size":590,"mtime":1613336628963,"results":"65","hashOfConfig":"48"},{"size":2561,"mtime":1614253093081,"results":"66","hashOfConfig":"48"},{"size":5088,"mtime":1614247118173,"results":"67","hashOfConfig":"48"},{"size":1790,"mtime":1614223623321,"results":"68","hashOfConfig":"48"},{"size":488,"mtime":1614224920577,"results":"69","hashOfConfig":"48"},{"size":3894,"mtime":1614252699092,"results":"70","hashOfConfig":"48"},{"size":499,"mtime":1611326685780,"results":"71","hashOfConfig":"48"},{"size":5396,"mtime":1614180804906,"results":"72","hashOfConfig":"48"},{"size":760,"mtime":1612919867679,"results":"73","hashOfConfig":"48"},{"size":899,"mtime":1613336628955,"results":"74","hashOfConfig":"48"},{"size":3615,"mtime":1611520088919,"results":"75","hashOfConfig":"48"},{"size":499,"mtime":1612919867652,"results":"76","hashOfConfig":"48"},{"size":726,"mtime":1614252417486,"results":"77","hashOfConfig":"48"},{"size":460,"mtime":1611789525910,"results":"78","hashOfConfig":"48"},{"size":3177,"mtime":1614256327642,"results":"79","hashOfConfig":"48"},{"size":4811,"mtime":1614180804946,"results":"80","hashOfConfig":"48"},{"size":1862,"mtime":1614180804914,"results":"81","hashOfConfig":"48"},{"size":2331,"mtime":1614180288476,"results":"82","hashOfConfig":"48"},{"size":2199,"mtime":1610851140848,"results":"83","hashOfConfig":"48"},{"size":128,"mtime":1610851140851,"results":"84","hashOfConfig":"48"},{"size":1661,"mtime":1610851140858,"results":"85","hashOfConfig":"48"},{"size":1838,"mtime":1612919867651,"results":"86","hashOfConfig":"48"},{"size":3092,"mtime":1612104198322,"results":"87","hashOfConfig":"48"},{"size":1629,"mtime":1614180804933,"results":"88","hashOfConfig":"48"},{"size":2654,"mtime":1614258031195,"results":"89","hashOfConfig":"48"},{"size":588,"mtime":1612096446652,"results":"90","hashOfConfig":"48"},{"size":1193,"mtime":1614180804918,"results":"91","hashOfConfig":"48"},{"size":4109,"mtime":1614180804927,"results":"92","hashOfConfig":"48"},{"size":2381,"mtime":1612919867667,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},"1orxqso",{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"97"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"105"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"97"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"97"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"129"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Courses.tsx",["205","206"],"import React, { useEffect, useState } from \"react\";\r\nimport { Box, ButtonBase, Chip, Divider, Drawer, Grid, SvgIcon, TextField, Typography, } from \"@material-ui/core\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport CourseResponse from \"../models/CourseResponse\";\r\nimport CourseController from \"../api/CourseController\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport CourseVisulisations from \"../components/Courses/CourseVisulisations\";\r\nimport CoursesStyles from \"../styles/CoursesStyles\";\r\nimport FilterIcon from \"../assets/FilterIcon\";\r\nimport { useContext } from \"react\";\r\nimport { CourseContext } from \"../context/CourseContext\";\r\n\r\nconst Students = () => {\r\n  const classes = CoursesStyles();\r\n  const Auth0 = useAuth0();\r\n  const coursesContext = useContext(CourseContext);\r\n  const controller = new CourseController();\r\n  const [filterDrawer, setFilterDrawer] = useState(false);\r\n  const [textInput, setTextInput] = useState('');\r\n  const [courses, setCourses] = useState<CourseResponse[]>();\r\n\r\n  useEffect(() => {\r\n    GetCourses();\r\n  }, []);\r\n\r\n  const GetCourses = async () => {\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    setCourses(await controller.GetAllCourses(token));\r\n  };\r\n\r\n  const handleCourseFilter = (course: CourseResponse | null) => {\r\n    if (course) {\r\n      const newCourses = courses?.filter(\r\n        (c) => c.courseCode !== course.courseCode\r\n      );\r\n      setCourses(newCourses);\r\n      let chipData = [...coursesContext.selectedCourses]\r\n      chipData.push(course);\r\n      coursesContext.setSelectedCourses(chipData);\r\n      setTextInput(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChipDelete = (course: CourseResponse) => {\r\n    let chipData = [...coursesContext.selectedCourses]\r\n    chipData = chipData.filter(c => c.courseCode !== course.courseCode)\r\n    coursesContext.setSelectedCourses(chipData);\r\n    let courseArr = [course];\r\n    let newCourses = [...courses!];\r\n    newCourses = courseArr.concat(newCourses);\r\n    setCourses(newCourses);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {courses ? (\r\n        <Grid container spacing={3}>\r\n          <Grid xs={12} className={classes.title}>\r\n            <Typography variant=\"h4\">Courses</Typography>\r\n          </Grid>\r\n          <Grid xs={12}>\r\n            <ButtonBase onClick={() => setFilterDrawer(true)}>\r\n              <FilterIcon />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Drawer variant=\"temporary\" anchor={\"right\"} \r\n            open={filterDrawer} \r\n            classes={{paper: classes.drawerPaper}} \r\n            onClose={() => setFilterDrawer(false)} \r\n          >\r\n            <Grid >\r\n              <Grid xs={12} className={classes.filterCoursesTitle}>\r\n                <Typography variant=\"h5\" align=\"center\">Filter Courses</Typography>\r\n              </Grid>\r\n              <Grid container xs={12} className={classes.search}>\r\n                <Autocomplete\r\n                  options={courses}\r\n                  getOptionLabel={(course) => course.courseTitle}\r\n                  className={classes.autoComplete}\r\n                  onChange={(event, value, reason) => handleCourseFilter(value ?? null)}\r\n                  renderInput={(params) => \r\n                    (\r\n                      <TextField {...params} label=\"Courses\" variant=\"outlined\" />\r\n                    )}\r\n                  inputValue={textInput}\r\n                />\r\n              </Grid>\r\n              <Divider />\r\n              <Box className={classes.chips}>\r\n                {coursesContext.selectedCourses.map((course) => (\r\n                  <Chip label={course.courseTitle} className={classes.chipStyle}  onDelete={() => handleChipDelete(course)} />\r\n                  ))}\r\n              </Box>\r\n            </Grid>\r\n          </Drawer>\r\n          <CourseVisulisations/>\r\n        </Grid>\r\n      ) : (\r\n        <div className={classes.loading} color=\"secondary\">\r\n          <CircularProgress size={100} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Students;\r\n",["207","208"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\PieChart.tsx",["209","210"],"import { ResponsivePie } from \"@nivo/pie\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport StudentData from \"../../models/StudentData\";\r\n\r\ninterface PieChartProps {\r\n  data: StudentData[]\r\n}\r\n\r\nexport default function PieChart(props: PieChartProps) {\r\n  const [data, setData] = useState([\r\n    {id: \"Attended\",label: \"Attended\", value: 0, color: \"hsl(174, 70%, 50%)\"},\r\n    {id: \"Teaching\",label: \"Teaching\", value: 0, color: \"hsl(204, 70%, 50%)\"},\r\n    {id: \"Explained\",label: \"Explained\", value: 0, color: \"hsl(234, 70%, 50%)\"},\r\n    {id: \"Non-Attended\",label: \"Non-Attended\", value: 0, color: \"hsl(254, 70%, 50%)\"}\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    props.data.map(item => {\r\n      setData(data => [\r\n        {id: \"Attended\",label: \"Attended\", value: data[0].value + item.attended, color: \"hsl(174, 70%, 50%)\"},\r\n        {id: \"Teaching\",label: \"Teaching\", value: data[1].value + item.teaching, color: \"hsl(204, 70%, 50%)\"},\r\n        {id: \"Explained\",label: \"Explained\", value: data[2].value + item.explained, color: \"hsl(234, 70%, 50%)\"},\r\n        {id: \"Non-Attended\",label: \"Non-Attended\", value: data[3].value + item.nonAttended, color: \"hsl(254, 70%, 50%)\"}\r\n      ])\r\n    })\r\n  },[])\r\n\r\n\r\n  return (\r\n      <ResponsivePie\r\n        data={data}\r\n        //@ts-ignore\r\n        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\r\n        enableRadialLabels={false}\r\n        sliceLabelsSkipAngle={1}\r\n        sliceLabelsTextColor=\"#ffffff\"\r\n        colors={{ scheme: \"category10\" }}\r\n        margin={{bottom:60,}}\r\n        legends={[\r\n          {\r\n              anchor: 'bottom',\r\n              direction: 'row',\r\n              justify: false,\r\n              translateX: 0,\r\n              translateY: 20,\r\n              itemWidth: 80,\r\n              itemHeight: 0,\r\n              itemsSpacing: 0,\r\n              symbolSize: 20,\r\n              itemDirection: 'left-to-right'\r\n          }\r\n      ]}\r\n      />\r\n  );\r\n}\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\StudentPage.tsx",["211","212","213","214","215","216","217","218"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\AuthConfig.ts",[],["219","220"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\StepperStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\StudentsStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\PersistentAbsenteesByYearChart.tsx",["221"],"import { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Box, ButtonBase, Typography } from \"@material-ui/core\";\r\nimport { SwapHoriz } from \"@material-ui/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport StudentController from \"../../api/StudentController\";\r\n\r\nconst PersistentAbsenteesByYearChart = () => {\r\n  const Auth0 = useAuth0();\r\n  const controller = new StudentController();\r\n  const [data, setData] = useState([]);\r\n  const [showPersistent, setShowPersistent] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if(showPersistent){\r\n      GetPersistentAbsentees();\r\n    }else{\r\n      GetNotAttendingAbsentees();\r\n    }\r\n  },[showPersistent])\r\n\r\n  async function GetPersistentAbsentees(){\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    let response = await controller.GetPersistentAbsenteesByYear(token);\r\n    setData(response);\r\n  }\r\n\r\n  async function GetNotAttendingAbsentees(){\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    let response = await controller.NonAttendingStudentsByYear(token);\r\n    setData(response);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box style={{display: 'flex',justifyContent: 'flex-end', alignItems: 'flex-end'}}>\r\n          <ButtonBase onClick={() => setShowPersistent(!showPersistent)}>\r\n              <SwapHoriz/>\r\n          </ButtonBase>\r\n      </Box>\r\n      <Typography align=\"center\" variant=\"h5\">{showPersistent ? 'Persistent Absentees' : 'Not Attending Students'} By Year</Typography>\r\n      <div style={{ height: \"23.3rem\", width: \"99%\" }}>\r\n        <ResponsiveContainer width=\"99%\" height=\"99%\">\r\n          <BarChart\r\n            barGap={5}\r\n            data={data}\r\n            margin={{\r\n              top: 20,\r\n              right: 30,\r\n              left: 20,\r\n              bottom: 5,\r\n            }}\r\n          >\r\n            <XAxis dataKey=\"year\"/>\r\n            <YAxis />\r\n            <Tooltip labelStyle={{color: 'black'}}/>\r\n            <Legend />\r\n            <Bar dataKey={showPersistent ? 'persistentAbsenteesCount' : 'notAttendingStudents'} name={showPersistent ? \"Persistent Absentees\" : \"Not Attending\"} stackId=\"a\" fill=\"#3182CE\" />\r\n            {showPersistent ?\r\n            <Bar dataKey=\"attendingStudents\" name={\"Attending Students\"} stackId=\"a\" fill=\"#E53E3E\" />\r\n            :<></>}\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PersistentAbsenteesByYearChart;\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\StudentsTableBody.tsx",["222","223","224"],"import { useAuth0 } from '@auth0/auth0-react';\r\nimport { Box, Hidden, TableBody, TableCell, TableRow } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport StudentController from '../../api/StudentController';\r\nimport StudentData from '../../models/StudentData';\r\n\r\n\r\ninterface StudentsTableBodyProps {\r\n    page: number;\r\n    persistentView: boolean;\r\n}\r\n\r\n\r\n\r\nfunction StudentsTableBody(props: StudentsTableBodyProps) {\r\n\r\n    const Auth0 = useAuth0();\r\n    const controller = new StudentController();\r\n    const history = useHistory();\r\n    const [data, setData] = useState<any[]>([]);\r\n\r\n    useEffect(() => {\r\n        if(props.persistentView){\r\n            GetPersistentStudents();\r\n        }else{\r\n            GetNotAttendingStudents();\r\n        }\r\n    },[props.page, props.persistentView])\r\n\r\n    async function GetPersistentStudents(){\r\n        const token = await Auth0.getAccessTokenSilently();\r\n        const dbData = await controller.GetPersistentStudentsData(token, props.page);\r\n        setData(dbData);\r\n    }\r\n\r\n    async function GetNotAttendingStudents(){\r\n        const token = await Auth0.getAccessTokenSilently();\r\n        const dbData = await controller.NonAttendingStudents(token, props.page);\r\n        setData(dbData);\r\n    }\r\n\r\n    return (\r\n        <TableBody>\r\n                {data.map(item => (\r\n                    <TableRow className=\"item-hover\" onClick={() => history.push(`students/${item.userId}`)}>\r\n                        <TableCell>\r\n                            <Box>{item.userId}</Box>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            <Box style={{whiteSpace: \"nowrap\",width: '80px',textOverflow: 'ellipsis', overflow: 'hidden'}}>{item.regStatus}</Box>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            <Box style={{whiteSpace: \"nowrap\",width: '100px',textOverflow: 'ellipsis', overflow: 'hidden'}}>{item.courseTitle}</Box>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            <Box style={{textAlign: 'center'}}>{Math.round(item.attendancePercentage * 100)}%</Box>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                            {item.attendancePercentage < 0.4 ?\r\n                                <Box style={{textAlign: 'center',color: 'white',backgroundColor: 'red', borderRadius: 50}}>Critical</Box>\r\n                            :item.attendancePercentage < 0.6 ?\r\n                                <Box style={{textAlign: 'center',color: 'white',backgroundColor: '#FF1493', borderRadius: 50}}>Very Bad</Box>\r\n                            :\r\n                                <Box style={{textAlign: 'center',color: 'white',backgroundColor: '#FF4500', borderRadius: 50}}>Bad</Box>\r\n                            }\r\n                        </TableCell>\r\n                    </TableRow>\r\n                ))}\r\n        </TableBody>\r\n    )\r\n}\r\n\r\nexport default StudentsTableBody\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\LineGraph.tsx",["225","226","227","228"],"import React, { useEffect, useState } from \"react\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, AreaChart, Area } from \"recharts\";\r\nimport LineGraphModel from \"../../models/LineGraphModel\";\r\nimport StudentData from \"../../models/StudentData\";\r\n\r\ninterface LineGraphProps {\r\n    data: StudentData[]\r\n}\r\n\r\nexport default function LineGraph(props: LineGraphProps) {\r\n    const [val, setVal] = useState<LineGraphModel[]>([]);\r\n\r\n    useEffect(() => {\r\n        props.data.map((item,i) => {\r\n            setVal(val => [...val, {name:(i + 1).toString(),attended:Math.ceil(item.attendancePercentage * 100)}])\r\n        })\r\n    },[])\r\n  return (\r\n    <ResponsiveContainer width=\"99%\" height=\"99%\">\r\n    <AreaChart\r\n      data={val}\r\n      margin={{\r\n        top: 10,\r\n        right: 30,\r\n        left: 0,\r\n        bottom: 0,\r\n      }}\r\n    >\r\n      <defs>\r\n          <linearGradient id='color15' x1='0' y1='0' x2='0' y2='1'>\r\n             <stop offset='5%' stopColor='#EBF6FC' stopOpacity={0.8} />\r\n             <stop offset='95%' stopColor='#fff' stopOpacity={0.8} />\r\n          </linearGradient>\r\n      </defs>\r\n      <XAxis dataKey=\"name\" />\r\n      <YAxis domain={[0, 100]}/>\r\n      <Tooltip formatter={(value:number) => `${value}%`}/>\r\n      <CartesianGrid />\r\n      <Area\r\n          type='monotone'\r\n          dataKey='attended'\r\n          strokeWidth={4}\r\n          stackId='2'\r\n          stroke='#18A0FB'\r\n          fill='url(#color15)'\r\n          fillOpacity={1}\r\n        />\r\n    </AreaChart>\r\n  </ResponsiveContainer>\r\n  );\r\n}",["229","230"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\CoursePie.tsx",["231"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\index.tsx",[],["232","233"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\UploadContext.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\UserContext.tsx",[],["234","235"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Login.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\Routes.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\LayoutStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Drawer.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\CourseContext.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\HeatMap.tsx",["236","237","238"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Home.tsx",["239","240","241","242","243"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\PersistentAbsenteesByCourse.tsx",["244"],"import { useAuth0 } from '@auth0/auth0-react';\r\nimport { ResponsivePie } from '@nivo/pie'\r\nimport React, { useEffect, useState } from 'react'\r\nimport StudentController from '../../api/StudentController';\r\n\r\nfunction PersistentAbsenteesByCourse() {\r\n\r\n    const Auth0 = useAuth0();\r\n    const controller = new StudentController();\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n      fetchData();\r\n    },[])\r\n\r\n    async function fetchData(){\r\n      const token = await Auth0.getAccessTokenSilently();\r\n      const response = await controller.GetPersistentAbsenteesByCourse(token);\r\n      let newResponse = response.data.map((item:any,i:number) => {\r\n        return {\r\n          id: item.course,\r\n          label: item.course,\r\n          value: item.students\r\n        }\r\n      })\r\n      newResponse = newResponse.filter((item:any) => item.value >= 12)\r\n      setData(newResponse);\r\n    }\r\n\r\n    return (\r\n        <div style={{height: '19rem' , width: '99%'}}>\r\n        <ResponsivePie\r\n        data={data}\r\n        //@ts-ignore\r\n        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\r\n        enableRadialLabels={false}\r\n        sliceLabelsSkipAngle={1}\r\n        sliceLabelsTextColor=\"#ffffff\"\r\n        colors={{ scheme: \"category10\" }}\r\n        margin={{bottom:60,}}\r\n        legends={[\r\n          {\r\n              anchor: 'bottom',\r\n              direction: 'row',\r\n              justify: false,\r\n              translateX: 0,\r\n              translateY: 20,\r\n              itemWidth: 80,\r\n              itemHeight: 0,\r\n              itemsSpacing: 0,\r\n              symbolSize: 20,\r\n              itemDirection: 'left-to-right'\r\n          }\r\n      ]}\r\n      />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default PersistentAbsenteesByCourse\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\Theme.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\CourseVisulisations.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\UserController.ts",[],["245","246"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\StudentController.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\CoursesStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\CommunicationController.ts",[],["247","248"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Upload.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\assets\\FilterIcon.tsx",[],["249","250"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\GraphDialog.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\AppContext.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\ScatterDiagram.tsx",["251","252","253"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Students.tsx",["254","255"],"import React, { useEffect, useState } from \"react\";\r\nimport { Box, ButtonBase, Chip, Divider, Drawer, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport StudentCard from \"../components/Students/StudentCard\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport StudentController from \"../api/StudentController\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { useContext } from \"react\";\r\nimport StudentPage from \"../models/StudentPage\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport StudentsStyles from \"../styles/StudentsStyles\";\r\nimport FilterIcon from \"../assets/FilterIcon\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CourseResponse from \"../models/CourseResponse\";\r\nimport CourseController from \"../api/CourseController\";\r\n\r\nconst Students = () => {\r\n  const classes = StudentsStyles();\r\n  const Auth0 = useAuth0();\r\n  const [pages, setPages] = useState(0);\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [students, setStudents] = useState<StudentPage[]>();\r\n  const [filterDrawer, setFilterDrawer] = useState(false);\r\n  const [textInput, setTextInput] = useState('');\r\n  const [chipData, setChipData] = useState<CourseResponse[]>([]);\r\n  const [courses, setCourses] = useState<CourseResponse[]>([]);\r\n  const controller = new StudentController();\r\n  const courseController = new CourseController();\r\n  const appContext = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    setPagesCount().then(() => GetStudents());\r\n  },[appContext.searchBarValue, chipData]);\r\n  \r\n  useEffect(() => {\r\n    GetCourses();\r\n    GetStudents();\r\n  },[currPage,chipData])\r\n\r\n  const setPagesCount = async() => {\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    setPages(Math.ceil(await controller.GetStudentCount(appContext.searchBarValue, chipData, token)/12))\r\n  }\r\n  \r\n  const GetStudents = async() => {\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    setStudents(await controller.GetStudentsPage(currPage, appContext.searchBarValue, chipData, token));\r\n  }\r\n\r\n  const GetCourses = async () => {\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    setCourses(await courseController.GetAllCourses(token));\r\n  };\r\n\r\n  const handleCourseFilter = (course: CourseResponse | null) => {\r\n    if(course){\r\n      setChipData(chipData => [...chipData, course]);      \r\n      setTextInput('');\r\n    }\r\n  };\r\n  \r\n  const handleChipDelete = (course: CourseResponse) => {\r\n    setChipData(chipData.filter(c => c.courseCode !== course.courseCode));\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {students ? \r\n      <>\r\n        <Grid container spacing={3}>\r\n          <Grid xs={12} className={classes.title}>\r\n            <Typography variant=\"h4\">Students</Typography>\r\n          </Grid>\r\n          <Grid xs={12}>\r\n              <ButtonBase onClick={() => setFilterDrawer(true)}>\r\n                <FilterIcon />\r\n              </ButtonBase>\r\n            </Grid>\r\n          {students.map(student => (\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n              <StudentCard studentId={student.userId}/>\r\n            </Grid>\r\n          ))}\r\n          <Grid xs={12} className={classes.pagination}>\r\n            <Pagination count={pages} variant=\"outlined\" onChange={(event, value) => setCurrPage(value)}/>\r\n          </Grid>\r\n        </Grid>\r\n        <Drawer variant=\"temporary\" anchor={\"right\"} \r\n        open={filterDrawer} \r\n        classes={{paper: classes.drawerPaper}} \r\n        onClose={() => setFilterDrawer(false)} \r\n      >\r\n        <Grid >\r\n          <Grid xs={12} className={classes.filterStudentsTitle}>\r\n            <Typography variant=\"h5\" align=\"center\">Filter Students by Course</Typography>\r\n          </Grid>\r\n          <Grid container xs={12} className={classes.search}>\r\n            <Autocomplete\r\n              options={courses}\r\n              getOptionLabel={(course) => course.courseTitle}\r\n              className={classes.autoComplete}\r\n              onChange={(event, value, reason) => handleCourseFilter(value ?? null)}\r\n              renderInput={(params) => \r\n                (\r\n                  <TextField {...params} label=\"Courses\" variant=\"outlined\" />\r\n                )}\r\n              inputValue={textInput}\r\n            />\r\n          </Grid>\r\n          <Divider />\r\n          <Box className={classes.chips}>\r\n            {chipData.map((course) => (\r\n              <Chip label={course.courseTitle} className={classes.chipStyle}  onDelete={() => handleChipDelete(course)} />\r\n              ))}\r\n          </Box>\r\n        </Grid>\r\n      </Drawer>\r\n      </>\r\n    :\r\n      <div className={classes.loading} color=\"secondary\">\r\n        <CircularProgress size={100} />\r\n      </div>\r\n    }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Students;","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\AbsenceStartGraph.tsx",["256"],"import { useAuth0 } from '@auth0/auth0-react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport StudentController from '../../api/StudentController';\r\n\r\nconst AbsenceStartGraph = () => {\r\n\r\n  const Auth0 = useAuth0();\r\n  const controller = new StudentController();\r\n  const [data, setData] = useState([]);\r\n  useEffect(() =>{\r\n    fetchData();\r\n  },[])\r\n\r\n  async function fetchData(){\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    const response = await controller.GetAbsenceStartingData(token);\r\n    const newResponse = response.map((item:any,i:number) => {\r\n      return {name: `Period ${i+1}`, attendance: Math.ceil((item.attended/item.teaching)*100)}\r\n    })\r\n    setData(newResponse);\r\n  }\r\n  return (\r\n    <div style={{ height: \"19rem\", width: \"99%\" }}>\r\n    <ResponsiveContainer width=\"99%\" height=\"99%\">\r\n    <AreaChart\r\n      data={data}\r\n      margin={{\r\n        top: 10,\r\n        right: 30,\r\n        left: 0,\r\n        bottom: 0,\r\n      }}\r\n    >\r\n      <defs>\r\n          <linearGradient id='color15' x1='0' y1='0' x2='0' y2='1'>\r\n             <stop offset='5%' stopColor='#EBF6FC' stopOpacity={0.8} />\r\n             <stop offset='95%' stopColor='#fff' stopOpacity={0.8} />\r\n          </linearGradient>\r\n      </defs>\r\n      <XAxis dataKey=\"name\" />\r\n      <YAxis domain={[0, 100]}/>\r\n      <Tooltip formatter={(value:number) => `${value}%`}/>\r\n      <CartesianGrid />\r\n      <Area\r\n          type='monotone'\r\n          dataKey='attendance'\r\n          strokeWidth={4}\r\n          stackId='2'\r\n          stroke='#18A0FB'\r\n          fill='url(#color15)'\r\n          fillOpacity={1}\r\n        />\r\n    </AreaChart>\r\n  </ResponsiveContainer>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default AbsenceStartGraph;\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\TopBar.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Profile.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\DashboardConfig.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\TopBarStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\CourseController.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\FileUpload.tsx",["257","258"],"import React, { useContext, useState } from 'react'\r\nimport \"../styles/FileUpload.css\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport * as XLSX from 'xlsx';\r\nimport {parse, ParseResult} from 'papaparse';\r\nimport { Typography } from '@material-ui/core';\r\nimport { UploadContext } from '../context/UploadContext';\r\nimport UploadModel from '../models/UploadModel';\r\n\r\nconst dataHeaders = [\r\n  \"userId\",\r\n  \"studyLevel\",\r\n  \"courseYear\",\r\n  \"regStatus\",\r\n  \"courseTitle\",\r\n  \"courseCode\",\r\n  \"teaching\",\r\n  \"attended\",\r\n  \"explained\",\r\n  \"nonAttended\",\r\n  \"percentAttendance\",\r\n  \"unexcusedPercentAttendance\",\r\n  \"lastAttendance\"\r\n];\r\n\r\n\r\nfunction FileUpload() {\r\n    const uploadContext = useContext(UploadContext)\r\n    async function handleUpload(e: React.DragEvent){\r\n        e.preventDefault();\r\n        const file = await e.dataTransfer.files[0];\r\n        if(file.name.split('.')[1] === 'csv'){\r\n          let csv = await file.text();\r\n          let csvRows = csv.split(\"\\n\");\r\n          csvRows[0] = dataHeaders.join();\r\n          csv = csvRows.join(\"\\n\");\r\n          const parseResponse = parse(csv, {header:true}).data;\r\n          const parsedData : UploadModel[] = parseResponse.map((row:any,i) => {\r\n            const newRow : UploadModel = {\r\n              id: i,\r\n              userId: parseInt(row.userId),\r\n              studyLevel: row.studyLevel,\r\n              courseYear: row.courseYear,\r\n              regStatus: row.regStatus,\r\n              courseTitle: row.courseTitle,\r\n              courseCode: row.courseCode,\r\n              teaching: parseInt(row.teaching),\r\n              attended: parseInt(row.attended),\r\n              explained: parseInt(row.explained),\r\n              nonAttended: parseInt(row.nonAttended),\r\n              percentAttendance: parseFloat(row.percentAttendance),\r\n              unexcusedPercentAttendance: parseFloat(row.unexcusedPercentAttendance),\r\n              lastAttendance: new Date(row.lastAttendance)\r\n            }\r\n            return newRow;\r\n          });\r\n          uploadContext.setUploadedData(parsedData)\r\n        } else if(file.name.split('.')[1] === 'xls' || file.name.split('.')[1] === 'xlsx'){\r\n          const reader = new FileReader();\r\n          reader.onload = e => {\r\n            let data = e.target?.result;\r\n            let workbookData = XLSX.read(data, {type: 'binary', cellDates: true});\r\n            const worksheet = workbookData.Sheets[workbookData.SheetNames[0]];\r\n            let parsedData : UploadModel[] = XLSX.utils.sheet_to_json(worksheet , {header: dataHeaders, range:1});\r\n            uploadContext.setUploadedData(parsedData)\r\n          }\r\n          reader.readAsBinaryString(file);\r\n        }\r\n      }\r\n    return (\r\n        <div className=\"upload\"\r\n          onDragOver={e => e.preventDefault()}\r\n          onDrop={handleUpload}\r\n        >\r\n            <CloudUploadIcon fontSize=\"large\"/>\r\n            <Typography>{uploadContext.uploadedData.length === 0 ? \"File not uploaded\" : \"File uploaded\"}</Typography>            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default FileUpload\r\n",["259","260"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\StudentCard.tsx",["261","262","263"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\CourseBar.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\FileController.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\SmallInfo.tsx",["264"],"import { Box, Card, CardContent, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\ninterface SmallInfoProps {\r\n    title: string;\r\n    data: string;\r\n    imagesrc: string;\r\n}\r\n\r\nconst SmallInfo = (props:SmallInfoProps) => {\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Box style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                    <Box>\r\n                        <Typography style={{whiteSpace: \"nowrap\",width: '140px',textOverflow: 'ellipsis', overflow: 'hidden'}}>\r\n                            {props.title}\r\n                        </Typography>\r\n                        <Typography variant=\"h4\">\r\n                            {props.data}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box style={{display:'flex', justifyContent: 'center', alignItems: 'center',marginRight: '10%', padding: '5px 10px 5px 10px', backgroundColor: 'lightblue', borderRadius: '50%'}}>\r\n                        <img style={{height: '70%'}} src={props.imagesrc} />\r\n                    </Box>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default SmallInfo\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\Email.tsx",["265","266"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\UploadedDataCheck.tsx",["267"],{"ruleId":"268","severity":1,"message":"269","line":2,"column":56,"nodeType":"270","messageId":"271","endLine":2,"endColumn":63},{"ruleId":"272","severity":1,"message":"273","line":25,"column":6,"nodeType":"274","endLine":25,"endColumn":8,"suggestions":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","severity":1,"message":"281","line":18,"column":25,"nodeType":"282","messageId":"283","endLine":18,"endColumn":27},{"ruleId":"272","severity":1,"message":"284","line":26,"column":5,"nodeType":"274","endLine":26,"endColumn":7,"suggestions":"285"},{"ruleId":"268","severity":1,"message":"286","line":7,"column":15,"nodeType":"270","messageId":"271","endLine":7,"endColumn":21},{"ruleId":"268","severity":1,"message":"287","line":16,"column":8,"nodeType":"270","messageId":"271","endLine":16,"endColumn":13},{"ruleId":"268","severity":1,"message":"288","line":17,"column":8,"nodeType":"270","messageId":"271","endLine":17,"endColumn":18},{"ruleId":"268","severity":1,"message":"289","line":31,"column":24,"nodeType":"270","messageId":"271","endLine":31,"endColumn":37},{"ruleId":"272","severity":1,"message":"290","line":38,"column":7,"nodeType":"274","endLine":38,"endColumn":9,"suggestions":"291"},{"ruleId":"292","severity":1,"message":"293","line":45,"column":27,"nodeType":"294","messageId":"295","endLine":45,"endColumn":29},{"ruleId":"296","severity":1,"message":"297","line":89,"column":37,"nodeType":"298","endLine":89,"endColumn":136},{"ruleId":"268","severity":1,"message":"299","line":260,"column":7,"nodeType":"270","messageId":"271","endLine":260,"endColumn":13},{"ruleId":"276","replacedBy":"300"},{"ruleId":"278","replacedBy":"301"},{"ruleId":"272","severity":1,"message":"302","line":28,"column":5,"nodeType":"274","endLine":28,"endColumn":21,"suggestions":"303"},{"ruleId":"268","severity":1,"message":"304","line":2,"column":15,"nodeType":"270","messageId":"271","endLine":2,"endColumn":21},{"ruleId":"268","severity":1,"message":"305","line":6,"column":8,"nodeType":"270","messageId":"271","endLine":6,"endColumn":19},{"ruleId":"272","severity":1,"message":"306","line":29,"column":7,"nodeType":"274","endLine":29,"endColumn":41,"suggestions":"307"},{"ruleId":"268","severity":1,"message":"308","line":2,"column":10,"nodeType":"270","messageId":"271","endLine":2,"endColumn":19},{"ruleId":"268","severity":1,"message":"309","line":2,"column":21,"nodeType":"270","messageId":"271","endLine":2,"endColumn":25},{"ruleId":"280","severity":1,"message":"281","line":14,"column":33,"nodeType":"282","messageId":"283","endLine":14,"endColumn":35},{"ruleId":"272","severity":1,"message":"284","line":17,"column":7,"nodeType":"274","endLine":17,"endColumn":9,"suggestions":"310"},{"ruleId":"276","replacedBy":"311"},{"ruleId":"278","replacedBy":"312"},{"ruleId":"272","severity":1,"message":"313","line":23,"column":7,"nodeType":"274","endLine":23,"endColumn":39,"suggestions":"314"},{"ruleId":"276","replacedBy":"315"},{"ruleId":"278","replacedBy":"316"},{"ruleId":"276","replacedBy":"317"},{"ruleId":"278","replacedBy":"318"},{"ruleId":"272","severity":1,"message":"319","line":15,"column":6,"nodeType":"274","endLine":15,"endColumn":38,"suggestions":"320"},{"ruleId":"280","severity":1,"message":"281","line":27,"column":20,"nodeType":"282","messageId":"283","endLine":27,"endColumn":22},{"ruleId":"280","severity":1,"message":"281","line":29,"column":36,"nodeType":"282","messageId":"283","endLine":29,"endColumn":38},{"ruleId":"268","severity":1,"message":"321","line":2,"column":10,"nodeType":"270","messageId":"271","endLine":2,"endColumn":16},{"ruleId":"268","severity":1,"message":"322","line":3,"column":10,"nodeType":"270","messageId":"271","endLine":3,"endColumn":13},{"ruleId":"268","severity":1,"message":"323","line":3,"column":15,"nodeType":"270","messageId":"271","endLine":3,"endColumn":25},{"ruleId":"268","severity":1,"message":"324","line":4,"column":10,"nodeType":"270","messageId":"271","endLine":4,"endColumn":19},{"ruleId":"272","severity":1,"message":"325","line":26,"column":5,"nodeType":"274","endLine":26,"endColumn":7,"suggestions":"326"},{"ruleId":"272","severity":1,"message":"327","line":14,"column":7,"nodeType":"274","endLine":14,"endColumn":9,"suggestions":"328"},{"ruleId":"276","replacedBy":"329"},{"ruleId":"278","replacedBy":"330"},{"ruleId":"276","replacedBy":"331"},{"ruleId":"278","replacedBy":"332"},{"ruleId":"276","replacedBy":"333"},{"ruleId":"278","replacedBy":"334"},{"ruleId":"268","severity":1,"message":"335","line":2,"column":10,"nodeType":"270","messageId":"271","endLine":2,"endColumn":31},{"ruleId":"272","severity":1,"message":"313","line":16,"column":7,"nodeType":"274","endLine":16,"endColumn":39,"suggestions":"336"},{"ruleId":"280","severity":1,"message":"281","line":25,"column":30,"nodeType":"282","messageId":"283","endLine":25,"endColumn":32},{"ruleId":"272","severity":1,"message":"337","line":33,"column":5,"nodeType":"274","endLine":33,"endColumn":42,"suggestions":"338"},{"ruleId":"272","severity":1,"message":"339","line":38,"column":5,"nodeType":"274","endLine":38,"endColumn":24,"suggestions":"340"},{"ruleId":"272","severity":1,"message":"327","line":21,"column":5,"nodeType":"274","endLine":21,"endColumn":7,"suggestions":"341"},{"ruleId":"268","severity":1,"message":"342","line":1,"column":29,"nodeType":"270","messageId":"271","endLine":1,"endColumn":37},{"ruleId":"268","severity":1,"message":"343","line":5,"column":16,"nodeType":"270","messageId":"271","endLine":5,"endColumn":27},{"ruleId":"276","replacedBy":"344"},{"ruleId":"278","replacedBy":"345"},{"ruleId":"268","severity":1,"message":"346","line":8,"column":8,"nodeType":"270","messageId":"271","endLine":8,"endColumn":20},{"ruleId":"268","severity":1,"message":"347","line":9,"column":8,"nodeType":"270","messageId":"271","endLine":9,"endColumn":19},{"ruleId":"296","severity":1,"message":"297","line":31,"column":21,"nodeType":"298","endLine":31,"endColumn":120},{"ruleId":"296","severity":1,"message":"297","line":24,"column":25,"nodeType":"298","endLine":24,"endColumn":77},{"ruleId":"268","severity":1,"message":"348","line":2,"column":32,"nodeType":"270","messageId":"271","endLine":2,"endColumn":36},{"ruleId":"272","severity":1,"message":"349","line":20,"column":5,"nodeType":"274","endLine":20,"endColumn":7,"suggestions":"350"},{"ruleId":"272","severity":1,"message":"351","line":46,"column":5,"nodeType":"274","endLine":46,"endColumn":7,"suggestions":"352"},"@typescript-eslint/no-unused-vars","'SvgIcon' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GetCourses'. Either include it or remove the dependency array.","ArrayExpression",["353"],"no-native-reassign",["354"],"no-negated-in-lhs",["355"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array.",["356"],"'Button' is defined but never used.","'jsPDF' is defined but never used.","'domtoimage' is defined but never used.","'setGraphTitle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'appContext' and 'fetchData'. Either include them or remove the dependency array.",["357"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Prints' is assigned a value but never used.",["354"],["355"],"React Hook useEffect has missing dependencies: 'GetNotAttendingAbsentees' and 'GetPersistentAbsentees'. Either include them or remove the dependency array.",["358"],"'Hidden' is defined but never used.","'StudentData' is defined but never used.","React Hook useEffect has missing dependencies: 'GetNotAttendingStudents' and 'GetPersistentStudents'. Either include them or remove the dependency array.",["359"],"'LineChart' is defined but never used.","'Line' is defined but never used.",["360"],["354"],["355"],"React Hook useEffect has a missing dependency: 'getChartData'. Either include it or remove the dependency array.",["361"],["354"],["355"],["354"],["355"],"React Hook useEffect has a missing dependency: 'GetChartData'. Either include it or remove the dependency array.",["362"],"'Player' is defined but never used.","'Box' is defined but never used.","'ButtonBase' is defined but never used.","'SwapHoriz' is defined but never used.","React Hook useEffect has missing dependencies: 'getAverageAttendance', 'getNotAttendingStudentsCount', 'getPersistentStudentsCount', and 'getSmallCardData'. Either include them or remove the dependency array.",["363"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["364"],["354"],["355"],["354"],["355"],["354"],["355"],"'ResponsiveScatterPlot' is defined but never used.",["365"],"React Hook useEffect has missing dependencies: 'GetStudents' and 'setPagesCount'. Either include them or remove the dependency array.",["366"],"React Hook useEffect has missing dependencies: 'GetCourses' and 'GetStudents'. Either include them or remove the dependency array.",["367"],["368"],"'useState' is defined but never used.","'ParseResult' is defined but never used.",["354"],["355"],"'StudentImage' is defined but never used.","'TouchRipple' is defined but never used.","'Work' is defined but never used.","React Hook useEffect has a missing dependency: 'GetEmails'. Either include it or remove the dependency array.",["369"],"React Hook useEffect has a missing dependency: 'uploadContext.uploadedData'. Either include it or remove the dependency array.",["370"],{"desc":"371","fix":"372"},"no-global-assign","no-unsafe-negation",{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"373","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"382","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"388","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},"Update the dependencies array to be: [GetCourses]",{"range":"400","text":"401"},"Update the dependencies array to be: [props.data]",{"range":"402","text":"403"},"Update the dependencies array to be: [appContext, fetchData]",{"range":"404","text":"405"},"Update the dependencies array to be: [GetNotAttendingAbsentees, GetPersistentAbsentees, showPersistent]",{"range":"406","text":"407"},"Update the dependencies array to be: [GetNotAttendingStudents, GetPersistentStudents, props.page, props.persistentView]",{"range":"408","text":"409"},{"range":"410","text":"403"},"Update the dependencies array to be: [coursesContext.selectedCourses, getChartData]",{"range":"411","text":"412"},"Update the dependencies array to be: [GetChartData, coursesContext.selectedCourses]",{"range":"413","text":"414"},"Update the dependencies array to be: [getAverageAttendance, getNotAttendingStudentsCount, getPersistentStudentsCount, getSmallCardData]",{"range":"415","text":"416"},"Update the dependencies array to be: [fetchData]",{"range":"417","text":"418"},{"range":"419","text":"412"},"Update the dependencies array to be: [GetStudents, appContext.searchBarValue, chipData, setPagesCount]",{"range":"420","text":"421"},"Update the dependencies array to be: [currPage, chipData, GetCourses, GetStudents]",{"range":"422","text":"423"},{"range":"424","text":"418"},"Update the dependencies array to be: [GetEmails]",{"range":"425","text":"426"},"Update the dependencies array to be: [uploadContext.uploadedData]",{"range":"427","text":"428"},[1146,1148],"[GetCourses]",[1200,1202],"[props.data]",[1620,1622],"[appContext, fetchData]",[765,781],"[GetNotAttendingAbsentees, GetPersistentAbsentees, showPersistent]",[841,875],"[GetNotAttendingStudents, GetPersistentStudents, props.page, props.persistentView]",[662,664],[1105,1137],"[coursesContext.selectedCourses, getChartData]",[550,582],"[GetChartData, coursesContext.selectedCourses]",[1325,1327],"[getAverageAttendance, getNotAttendingStudentsCount, getPersistentStudentsCount, getSmallCardData]",[425,427],"[fetchData]",[664,696],[1568,1605],"[GetStudents, appContext.searchBarValue, chipData, setPagesCount]",[1677,1696],"[currPage, chipData, GetCourses, GetStudents]",[488,490],[983,985],"[GetEmails]",[2200,2202],"[uploadContext.uploadedData]"]