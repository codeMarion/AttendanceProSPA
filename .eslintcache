[{"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Courses.tsx":"1","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\PieChart.tsx":"2","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\StudentPage.tsx":"3","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\AuthConfig.ts":"4","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\StepperStyles.ts":"5","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\StudentsStyles.ts":"6","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\PersistentAbsenteesByYearChart.tsx":"7","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\StudentsTableBody.tsx":"8","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\LineGraph.tsx":"9","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\CoursePie.tsx":"10","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\index.tsx":"11","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\UploadContext.tsx":"12","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\UserContext.tsx":"13","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Login.tsx":"14","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\Routes.ts":"15","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\LayoutStyles.ts":"16","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Drawer.tsx":"17","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\CourseContext.tsx":"18","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\HeatMap.tsx":"19","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Home.tsx":"20","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\PersistentAbsenteesByCourse.tsx":"21","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\Theme.ts":"22","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\CourseVisulisations.tsx":"23","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\UserController.ts":"24","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\StudentController.ts":"25","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\CoursesStyles.ts":"26","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\CommunicationController.ts":"27","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Upload.tsx":"28","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\assets\\FilterIcon.tsx":"29","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\GraphDialog.tsx":"30","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\AppContext.tsx":"31","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\ScatterDiagram.tsx":"32","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Students.tsx":"33","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\AbsenceStartGraph.tsx":"34","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\TopBar.tsx":"35","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Profile.tsx":"36","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\DashboardConfig.ts":"37","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\TopBarStyles.ts":"38","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\CourseController.ts":"39","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\FileUpload.tsx":"40","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\StudentCard.tsx":"41","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\CourseBar.tsx":"42","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\FileController.ts":"43","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\SmallInfo.tsx":"44","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\Email.tsx":"45","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\UploadedDataCheck.tsx":"46","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\StudentsTable.tsx":"47","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\EmailReminders.ts":"48","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Layout.tsx":"49","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\App.tsx":"50","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\FileUploadStyles.ts":"51","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\StudentsTableHeader.tsx":"52"},{"size":4096,"mtime":1614492409721,"results":"53","hashOfConfig":"54"},{"size":1899,"mtime":1614477032516,"results":"55","hashOfConfig":"54"},{"size":17197,"mtime":1614511116372,"results":"56","hashOfConfig":"54"},{"size":334,"mtime":1611520088915,"results":"57","hashOfConfig":"54"},{"size":392,"mtime":1611326685791,"results":"58","hashOfConfig":"54"},{"size":826,"mtime":1613336628966,"results":"59","hashOfConfig":"54"},{"size":2599,"mtime":1614492409713,"results":"60","hashOfConfig":"54"},{"size":3111,"mtime":1614572382562,"results":"61","hashOfConfig":"54"},{"size":1619,"mtime":1614492409718,"results":"62","hashOfConfig":"54"},{"size":2990,"mtime":1614260815963,"results":"63","hashOfConfig":"54"},{"size":544,"mtime":1614517042212,"results":"64","hashOfConfig":"54"},{"size":945,"mtime":1612094553146,"results":"65","hashOfConfig":"54"},{"size":551,"mtime":1610851140853,"results":"66","hashOfConfig":"54"},{"size":1725,"mtime":1614334698045,"results":"67","hashOfConfig":"54"},{"size":758,"mtime":1612919867669,"results":"68","hashOfConfig":"54"},{"size":1334,"mtime":1610851140857,"results":"69","hashOfConfig":"54"},{"size":1195,"mtime":1611229003724,"results":"70","hashOfConfig":"54"},{"size":590,"mtime":1613336628963,"results":"71","hashOfConfig":"54"},{"size":2561,"mtime":1614260815968,"results":"72","hashOfConfig":"54"},{"size":5149,"mtime":1614583514191,"results":"73","hashOfConfig":"54"},{"size":1790,"mtime":1614260815973,"results":"74","hashOfConfig":"54"},{"size":488,"mtime":1614224920577,"results":"75","hashOfConfig":"54"},{"size":3894,"mtime":1614260815966,"results":"76","hashOfConfig":"54"},{"size":499,"mtime":1611326685780,"results":"77","hashOfConfig":"54"},{"size":5396,"mtime":1614438378201,"results":"78","hashOfConfig":"54"},{"size":760,"mtime":1612919867679,"results":"79","hashOfConfig":"54"},{"size":1218,"mtime":1614523326768,"results":"80","hashOfConfig":"54"},{"size":4118,"mtime":1614523453347,"results":"81","hashOfConfig":"54"},{"size":499,"mtime":1612919867652,"results":"82","hashOfConfig":"54"},{"size":726,"mtime":1614260815971,"results":"83","hashOfConfig":"54"},{"size":460,"mtime":1614572435761,"results":"84","hashOfConfig":"54"},{"size":3177,"mtime":1614260815970,"results":"85","hashOfConfig":"54"},{"size":4838,"mtime":1614572467186,"results":"86","hashOfConfig":"54"},{"size":1862,"mtime":1614180804914,"results":"87","hashOfConfig":"54"},{"size":2331,"mtime":1614180288476,"results":"88","hashOfConfig":"54"},{"size":2199,"mtime":1610851140848,"results":"89","hashOfConfig":"54"},{"size":128,"mtime":1610851140851,"results":"90","hashOfConfig":"54"},{"size":1661,"mtime":1610851140858,"results":"91","hashOfConfig":"54"},{"size":1838,"mtime":1612919867651,"results":"92","hashOfConfig":"54"},{"size":3092,"mtime":1612104198322,"results":"93","hashOfConfig":"54"},{"size":1629,"mtime":1614180804933,"results":"94","hashOfConfig":"54"},{"size":2509,"mtime":1614492708065,"results":"95","hashOfConfig":"54"},{"size":588,"mtime":1612096446652,"results":"96","hashOfConfig":"54"},{"size":1193,"mtime":1614180804918,"results":"97","hashOfConfig":"54"},{"size":5952,"mtime":1614573462725,"results":"98","hashOfConfig":"54"},{"size":2381,"mtime":1612919867667,"results":"99","hashOfConfig":"54"},{"size":2316,"mtime":1614567374004,"results":"100","hashOfConfig":"54"},{"size":356,"mtime":1614514381369,"results":"101","hashOfConfig":"54"},{"size":2567,"mtime":1614518188795,"results":"102","hashOfConfig":"54"},{"size":1103,"mtime":1613336628954,"results":"103","hashOfConfig":"54"},{"size":331,"mtime":1612919867680,"results":"104","hashOfConfig":"54"},{"size":574,"mtime":1614180804924,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1orxqso",{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"113"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"182"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"158"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"182"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"196"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"121"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"196"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Courses.tsx",["229","230"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\PieChart.tsx",["231","232"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\StudentPage.tsx",["233","234","235","236"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport StudentController from '../../api/StudentController';\r\nimport Student from '../../models/Student';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { Box, ButtonBase, Card, CircularProgress, Grid, Hidden, Tabs, TextField, Typography } from '@material-ui/core';\r\nimport {Bookmark, CheckCircleOutline, Edit, Fullscreen, MailOutline, PersonRounded, Phone, Print, SchoolRounded} from '@material-ui/icons';\r\nimport PieChart from './PieChart';\r\nimport LineGraph from './LineGraph';\r\nimport GraphDialog from './../GraphDialog';\r\nimport Email from './Email';\r\nimport { Tab } from '@material-ui/core';\r\nimport Moment from \"react-moment\";\r\nimport { AppContext } from '../../context/AppContext';\r\n//@ts-ignore\r\nimport SVGtoPDF from 'svg-to-pdfkit';\r\n//@ts-ignore\r\nimport PDFDocument from 'pdfkit-browserify';\r\nimport blobStream from 'blob-stream';\r\n\r\n\r\nfunction StudentPage(props:any) {\r\n    const Auth0 = useAuth0();\r\n    const controller = new StudentController();\r\n    const history = useHistory();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [data, setData] = useState<Student>();\r\n    const [bigGraph, setBigGraph] = useState(\"\");\r\n    const tabs = [\"Profile\",\"Communication\"];\r\n    const [personalDetailsEditMode, setPersonalDetailsEditMode] = useState(false);\r\n    const [tab, setTab] = useState('profile');\r\n    const [graphTitle, setGraphTitle] = useState('');\r\n    const appContext = useContext(AppContext);\r\n    \r\n    \r\n\r\n    useEffect(() => {  \r\n        appContext.setSearchBarValue(\"\");\r\n        fetchData();\r\n    },[])\r\n\r\n    async function fetchData(){        \r\n        const token = await Auth0.getAccessTokenSilently();\r\n        const response = await controller.GetStudent(props.match.params.student, token);\r\n        if(response){\r\n            setData(await response)\r\n        }else if(response == false){\r\n            history.push(\"/students\");\r\n            enqueueSnackbar('Student not found!', { variant: \"error\" });\r\n        }\r\n    }\r\n    const printPDF = async() => {\r\n        PDFDocument.prototype.addSVG = function(svg:any, x:any, y:any, options:any) {\r\n            return SVGtoPDF(this, svg, x, y, options), this;\r\n        };\r\n        const overallAttendance = document.getElementById('overallAttendance')!.children[0].children[0].children[0];\r\n        const attendanceByPeriod = document.getElementById('attendanceByPeriod')!.children[0].children[0].children[0];\r\n        const logo = document.getElementsByClassName('MuiSvgIcon-root MuiSvgIcon-colorSecondary')[0]\r\n        var doc = new PDFDocument();\r\n        var stream = doc.pipe(blobStream())\r\n\r\n        doc.addSVG(logo, -100, 70, {preserveAspectRatio: 'None', height: 40, useCSS :true});\r\n        doc.fontSize(25).text('Attendance Pro', 100, 80, {align: 'center'});\r\n\r\n        doc.fontSize(15).text(`Student ID: ${data?.userId}`,50,130)\r\n        doc.fontSize(15).text(`Course: ${data?.courseTitle} (${data?.courseCode})`)\r\n        doc.fontSize(15).text(`Study Level: ${data?.studyLevel}`)\r\n\r\n        doc.fontSize(15).text('Overall Attendance',240,200)\r\n        doc.addSVG(overallAttendance, 50, 230, {preserveAspectRatio: 'None', height: 250, width: 500});\r\n\r\n        doc.fontSize(15).text('Attendance By Period',220,480)\r\n        doc.addSVG(attendanceByPeriod, -20, 500, {preserveAspectRatio: 'None', height: 200})\r\n        doc.fontSize(10).text('%',100,590)\r\n        doc.fontSize(10).text('Period',290,700)\r\n\r\n        doc.end();\r\n            stream.on('finish', function() {\r\n            window.open(stream.toBlobURL('application/pdf'));\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            {data ? \r\n                <>\r\n                    {bigGraph ? \r\n                        <GraphDialog open={true} closeDialog={() => {\r\n                            setBigGraph(\"\");\r\n                            setGraphTitle(\"\")\r\n                        }} title={graphTitle}>\r\n                            {bigGraph === \"pie\" ?\r\n                                <div style={{ height: \"29rem\", width: \"100%\" }}>\r\n                                    <PieChart data={data.studentData}/>\r\n                                </div> \r\n                            : bigGraph === \"line\" ?\r\n                                <div style={{ height: \"29rem\", width: \"100%\" }}>\r\n                                    <LineGraph data={data.studentData}/>\r\n                                </div> \r\n                            :<></>\r\n                            }\r\n                        </GraphDialog>\r\n                        : \r\n                        <>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item style={{display: 'flex', width: '100%'}}>\r\n                                <Box style={{display:'flex', justifyContent: 'center', alignItems: 'center', padding: '5px 10px 5px 10px', backgroundColor: 'lightblue', borderRadius: '50%'}}>\r\n                                    <img style={{height: '70%'}} src={'https://img.icons8.com/color/48/000000/student-male--v1.png'} />\r\n                                </Box>\r\n                                        <Grid container style={{width: '100%', justifyContent: 'space-between'}}>\r\n                                            <Grid xs={12} md={8} >\r\n                                                <Box style={{marginLeft: '2%'}}>\r\n                                                    <Typography>Student</Typography>\r\n                                                    <Typography>University of Sussex</Typography>\r\n                                                    <Typography>Registered</Typography>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                            {data.studentData[data.studentData.length - 1].lastAttendance ?\r\n                                            <>\r\n                                                <Hidden smDown>\r\n                                                    <Grid xs={12} md={4} style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                                                        <Box>\r\n                                                            <Typography>Last Attendance: <Moment format=\"DD/MM/YYYY HH:mm\">{data.studentData[data.studentData.length - 1].lastAttendance}</Moment></Typography>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                </Hidden>\r\n                                                <Hidden mdUp>\r\n                                                    <Grid xs={12} md={4} style={{display: 'flex',marginLeft: '2%', justifyContent: 'flex-start'}}>\r\n                                                        <Box>\r\n                                                            <Typography>Last Attendance: <Moment format=\"DD/MM/YYYY HH:mm\">{data.studentData[data.studentData.length - 1].lastAttendance}</Moment></Typography>\r\n                                                        </Box>\r\n                                                    </Grid>\r\n                                                </Hidden>\r\n                                            </> : <></>\r\n                                            }\r\n                                        </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container xs={12}>\r\n                                {tab === \"Communication\" ? \r\n                                    <></> \r\n                                    : \r\n                                    <ButtonBase style={{paddingTop: 10, paddingBottom: 10}} onClick={printPDF}>\r\n                                        <Print />\r\n                                    </ButtonBase>\r\n                                }\r\n                                {data.email ? \r\n                                    <Tabs\r\n                                        onChange={(event, value) => setTab(tabs[value])}\r\n                                        indicatorColor='primary'\r\n                                        textColor='primary'\r\n                                        variant='scrollable'\r\n                                        scrollButtons='auto'\r\n                                        aria-label='scrollable auto tabs example'\r\n                                            >\r\n                                        {tabs.map((tab, index) => {\r\n                                        return (\r\n                                            <Tab\r\n                                                key={index}\r\n                                                label={tab}\r\n                                            />\r\n                                        );\r\n                                        })}\r\n                                    </Tabs>\r\n                                : <></> }\r\n                            </Grid>\r\n                            {tab === 'Communication' ? <Email name={data.userId} email={data.email} /> :\r\n                            <>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12} md={6}>\r\n                                <Card>\r\n                                    <Box style={{margin: '1rem'}}>\r\n                                        <Typography variant=\"subtitle1\">Course Details:</Typography>\r\n                                        <Grid container style={{margin: '2% 0'}}>\r\n                                            <PersonRounded />\r\n                                            <Typography style={{marginLeft: '1%'}}>#{data.userId}</Typography>\r\n                                        </Grid>\r\n                                        <Grid container>\r\n                                            <SchoolRounded />\r\n                                            <Typography style={{marginLeft: '1%'}}>{data.courseTitle} ({data.courseCode})</Typography>\r\n                                        </Grid>\r\n                                        <Grid container style={{margin: '2% 0'}}>\r\n                                            <Bookmark />\r\n                                            <Typography style={{marginLeft: '1%'}}>{data.studyLevel}</Typography>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Card>\r\n                                </Grid>\r\n                                <Grid item xs={12} md={6}>\r\n                                    <Card>\r\n                                        <Box style={{margin: '1rem'}}>\r\n                                            <Box style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                                                <Typography variant=\"subtitle1\">Contact Details:</Typography>\r\n                                                {personalDetailsEditMode ? \r\n                                                    <ButtonBase onClick={async () => {\r\n                                                        const token = await Auth0.getAccessTokenSilently();\r\n                                                        controller.UpdateStudent(data.userId,data.email,data.phone,token);\r\n                                                        setPersonalDetailsEditMode(false);\r\n                                                    }}>\r\n                                                        <CheckCircleOutline />\r\n                                                    </ButtonBase>\r\n                                                :\r\n                                                    <ButtonBase onClick={() => setPersonalDetailsEditMode(true)}>\r\n                                                        <Edit />\r\n                                                    </ButtonBase>\r\n                                                }\r\n                                            </Box>\r\n                                            <Grid container style={{margin: '2% 0'}}>\r\n                                                <MailOutline />\r\n                                                {personalDetailsEditMode ?\r\n                                                    <TextField value={data.email} onChange={(e) => {\r\n                                                        const newData = {...data};\r\n                                                        newData.email = e.target.value;\r\n                                                        setData(newData);\r\n                                                    }}/>\r\n                                                :\r\n                                                    <Typography style={{marginLeft: '1%'}} variant=\"body2\">{data.email}</Typography>\r\n                                                }\r\n                                            </Grid>\r\n                                            <Grid container >\r\n                                                <Phone />\r\n                                                {personalDetailsEditMode ?\r\n                                                    <TextField value={data.phone} onChange={(e) => {\r\n                                                        const newData = {...data};\r\n                                                        newData.phone = e.target.value;\r\n                                                        setData(newData);\r\n                                                    }}/>\r\n                                                :\r\n                                                    <Typography style={{marginLeft: '1%'}} variant=\"body2\">{data.phone}</Typography>\r\n                                                }\r\n                                            </Grid>\r\n                                        </Box>\r\n                                    </Card>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12} lg={6} >\r\n                                    <Card>\r\n                                        <Box style={{display: 'flex',justifyContent: 'flex-end'}}>\r\n                                            <ButtonBase onClick={() => {\r\n                                                setGraphTitle(\"Attendance By Period (%)\");\r\n                                                setBigGraph(\"line\");\r\n                                            }}>\r\n                                                <Fullscreen />\r\n                                            </ButtonBase>\r\n                                        </Box>\r\n                                        <div style={{margin: '1rem'}}>\r\n                                            <Typography style={{textAlign: 'center', marginBottom: '2%'}} variant=\"h5\">Attendance By Period (%)</Typography>\r\n                                            <div id=\"attendanceByPeriod\" style={{height: '19rem', width: \"99%\"}}>\r\n                                                <LineGraph data={data.studentData}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card>\r\n                                </Grid>\r\n                                <Grid item xs={12} lg={6} >\r\n                                    <Card>\r\n                                        <Box style={{display: 'flex',justifyContent: 'flex-end'}}>\r\n                                            <ButtonBase onClick={() => {\r\n                                                setGraphTitle(\"Overall Attendance\");\r\n                                                setBigGraph(\"pie\")\r\n                                            }}>\r\n                                                <Fullscreen />\r\n                                            </ButtonBase>\r\n                                        </Box>\r\n                                        <div style={{margin: '1rem'}}>\r\n                                            <Typography style={{textAlign: 'center', marginBottom: '2%'}} variant=\"h5\">Overall Attendance</Typography>\r\n                                            <div id=\"overallAttendance\" style={{height: '19rem' , width: '99%'}}>\r\n                                                <PieChart data={data.studentData}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card>\r\n                                </Grid>\r\n                            </Grid>\r\n                            </> }                   \r\n                        </>\r\n                    }\r\n                </>\r\n            :\r\n                <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}} color=\"secondary\">\r\n                    <CircularProgress size={100} />\r\n                </div>\r\n            }           \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StudentPage;",["237","238"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\AuthConfig.ts",[],["239","240"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\StepperStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\StudentsStyles.ts",[],["241","242"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\PersistentAbsenteesByYearChart.tsx",["243"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\StudentsTableBody.tsx",["244","245","246"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\LineGraph.tsx",["247","248","249","250"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\CoursePie.tsx",["251"],"import { useAuth0 } from '@auth0/auth0-react';\r\nimport { ResponsivePie } from '@nivo/pie'\r\nimport percentRound from 'percent-round';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport CourseController from '../../api/CourseController';\r\nimport { CourseContext } from '../../context/CourseContext';\r\nimport AbsenceReasonsResponse from '../../models/AbsenceReasonsResponse';\r\nimport PieProps from '../../models/PieProps';\r\n\r\nfunction CoursePie() {\r\n    const Auth0 = useAuth0();\r\n    const controller = new CourseController();\r\n    const coursesContext = useContext(CourseContext)\r\n    const [data, setData] = useState<PieProps[]>([\r\n      {id: \"Attended\", label: \"Attended\", value: 0, color: \"hsl(174, 70%, 50%)\"},\r\n      {id: \"Non-Attended\", label: \"Non-Attended\", value: 0, color: \"hsl(254, 70%, 50%)\"},\r\n      {id: \"Explained\", label: \"Explained\", value: 0, color: \"hsl(234, 70%, 50%)\"},\r\n    ])\r\n    const colors : any = { 'Non-Attended': 'rgb(228, 26, 28)', 'Explained': 'rgb(31, 119, 180)', 'Attended': 'rgb(44, 160, 44)' }\r\n\r\n    useEffect(() => {\r\n      getChartData();\r\n    },[coursesContext.selectedCourses])\r\n\r\n    async function getChartData(){\r\n      const token = await Auth0.getAccessTokenSilently();\r\n      const res: AbsenceReasonsResponse = await controller.GetAbsenceData(\r\n        coursesContext.selectedCourses.map((el) => el.courseCode),\r\n        token\r\n      );\r\n      const piePercentages = percentRound([res.overall.attended, res.overall.nonAttended, res.overall.explained]);\r\n      const newPieData = [...data];\r\n      newPieData[0].value = piePercentages[0];\r\n      newPieData[1].value = piePercentages[1];\r\n      newPieData[2].value = piePercentages[2];\r\n      setData(newPieData);\r\n    }\r\n\r\n\r\n    return (\r\n        <ResponsivePie\r\n        data={data}\r\n        margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\r\n        innerRadius={0.7}\r\n        colors={bar => colors[bar.id]}\r\n        borderWidth={1}\r\n        borderColor={{ from: \"color\", modifiers: [[\"darker\", 0.2]] }}\r\n        radialLabelsSkipAngle={10}\r\n        radialLabelsTextColor=\"#333333\"\r\n        radialLabelsLinkColor={{ from: \"color\" }}\r\n        sliceLabelsSkipAngle={10}\r\n        sliceLabelsTextColor=\"#ffffff\"\r\n        sliceLabel={(item) => `${item.value}%`}\r\n        legends={[\r\n          {\r\n            anchor: \"bottom\",\r\n            direction: \"row\",\r\n            justify: false,\r\n            translateX: 0,\r\n            translateY: 56,\r\n            itemsSpacing: 0,\r\n            itemWidth: 100,\r\n            itemHeight: 18,\r\n            itemTextColor: \"#999\",\r\n            itemDirection: \"left-to-right\",\r\n            itemOpacity: 1,\r\n            symbolSize: 18,\r\n            symbolShape: \"circle\",\r\n            effects: [\r\n              {\r\n                on: \"hover\",\r\n                style: {\r\n                  itemTextColor: \"#000\",\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        ]}\r\n      />\r\n    )\r\n}\r\n\r\nexport default CoursePie\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\index.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\UploadContext.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\UserContext.tsx",[],["252","253"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Login.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\Routes.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\LayoutStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Drawer.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\CourseContext.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\HeatMap.tsx",["254","255","256"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Home.tsx",["257","258","259","260","261"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\PersistentAbsenteesByCourse.tsx",["262"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\Theme.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\CourseVisulisations.tsx",[],["263","264"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\UserController.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\StudentController.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\CoursesStyles.ts",[],["265","266"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\CommunicationController.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Upload.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\assets\\FilterIcon.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\GraphDialog.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\AppContext.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\ScatterDiagram.tsx",["267","268","269"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { ResponsiveScatterPlot, ResponsiveScatterPlotCanvas } from '@nivo/scatterplot'\r\nimport ScatterProps from '../../models/ScatterProps'\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport CourseController from '../../api/CourseController';\r\nimport { CourseContext } from '../../context/CourseContext';\r\n\r\nfunction ScatterDiagram() {\r\n    const Auth0 = useAuth0();\r\n    const controller = new CourseController();\r\n    const coursesContext = useContext(CourseContext)\r\n    const [chartData, setChartData] = useState<ScatterProps[]>([]);\r\n\r\n    useEffect(() => {\r\n        getChartData()\r\n    },[coursesContext.selectedCourses])\r\n\r\n    async function getChartData() {\r\n        const token = await Auth0.getAccessTokenSilently();\r\n        const res = await controller.getAttendedByTeachingSessionsData(\r\n          coursesContext.selectedCourses.map((el) => el.courseCode),\r\n            token\r\n        );\r\n        const newData : ScatterProps[] = []\r\n        res.map((course:any) => {\r\n          const dataPoint : ScatterProps = {\r\n            id: course.course,\r\n            data: course.attendanceData.map((record : any) => {\r\n                return {\r\n                  x: record.attended,\r\n                  y: record.teaching\r\n                }\r\n            })\r\n          }\r\n          newData.push(dataPoint);\r\n        })\r\n        setChartData(newData);\r\n      }\r\n\r\n    return (\r\n        <ResponsiveScatterPlotCanvas\r\n        data={chartData}\r\n        margin={{ top: 60, right: 140, bottom: 70, left: 90 }}\r\n        xScale={{ type: 'linear', min: 0, max: 'auto' }}\r\n        xFormat={function(e){return \"attended \"+e}}\r\n        yScale={{ type: 'linear', min: 0, max: 'auto' }}\r\n        yFormat={function(e){return \"teaching \"+e}}\r\n        colors={{ scheme: 'category10' }}\r\n        blendMode=\"multiply\"\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n            orient: 'bottom',\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'attended',\r\n            legendPosition: 'middle',\r\n            legendOffset: 46\r\n        }}\r\n        axisLeft={{\r\n            orient: 'left',\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'teaching',\r\n            legendPosition: 'middle',\r\n            legendOffset: -60\r\n        }}\r\n        legends={[\r\n            {\r\n                anchor: 'bottom-right',\r\n                direction: 'column',\r\n                justify: false,\r\n                translateX: 130,\r\n                translateY: 0,\r\n                itemWidth: 100,\r\n                itemHeight: 12,\r\n                itemsSpacing: 5,\r\n                itemDirection: 'left-to-right',\r\n                symbolSize: 12,\r\n                symbolShape: 'circle',\r\n                effects: [\r\n                    {\r\n                        on: 'hover',\r\n                        style: {\r\n                            itemOpacity: 1\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]}\r\n    />\r\n    )\r\n}\r\n\r\nexport default ScatterDiagram\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Students.tsx",["270","271"],"import React, { useEffect, useState } from \"react\";\r\nimport { Box, ButtonBase, Chip, Divider, Drawer, Grid, TextField, Typography } from \"@material-ui/core\";\r\nimport StudentCard from \"../components/Students/StudentCard\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport StudentController from \"../api/StudentController\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { useContext } from \"react\";\r\nimport StudentPage from \"../models/StudentPage\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport StudentsStyles from \"../styles/StudentsStyles\";\r\nimport FilterIcon from \"../assets/FilterIcon\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport CourseResponse from \"../models/CourseResponse\";\r\nimport CourseController from \"../api/CourseController\";\r\n\r\nconst Students = () => {\r\n  const classes = StudentsStyles();\r\n  const Auth0 = useAuth0();\r\n  const [pages, setPages] = useState(0);\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [students, setStudents] = useState<StudentPage[]>();\r\n  const [filterDrawer, setFilterDrawer] = useState(false);\r\n  const [textInput, setTextInput] = useState('');\r\n  const [chipData, setChipData] = useState<CourseResponse[]>([]);\r\n  const [courses, setCourses] = useState<CourseResponse[]>([]);\r\n  const controller = new StudentController();\r\n  const courseController = new CourseController();\r\n  const appContext = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    setPagesCount().then(() => GetStudents());\r\n  },[appContext.searchBarValue, chipData]);\r\n  \r\n  useEffect(() => {\r\n    GetCourses();\r\n    GetStudents();\r\n  },[currPage,chipData])\r\n\r\n  const setPagesCount = async() => {\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    setPages(Math.ceil(await controller.GetStudentCount(appContext.searchBarValue, chipData, token)/12))\r\n  }\r\n  \r\n  const GetStudents = async() => {\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    setStudents(await controller.GetStudentsPage(currPage, appContext.searchBarValue, chipData, token));\r\n  }\r\n\r\n  const GetCourses = async () => {\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    setCourses(await courseController.GetAllCourses(token));\r\n  };\r\n\r\n  const handleCourseFilter = (course: CourseResponse | null) => {\r\n    if(course){\r\n      setChipData(chipData => [...chipData, course]);      \r\n      setTextInput('');\r\n    }\r\n  };\r\n  \r\n  const handleChipDelete = (course: CourseResponse) => {\r\n    setChipData(chipData.filter(c => c.courseCode !== course.courseCode));\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {students ? \r\n      <>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} className={classes.title}>\r\n            <Typography variant=\"h4\">Students</Typography>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n              <ButtonBase onClick={() => setFilterDrawer(true)}>\r\n                <FilterIcon />\r\n              </ButtonBase>\r\n            </Grid>\r\n          {students.map((student,i) => (\r\n            <Grid key={i} item xs={12} sm={6} md={4} lg={3}>\r\n              <StudentCard studentId={student.userId}/>\r\n            </Grid>\r\n          ))}\r\n          <Grid item xs={12} className={classes.pagination}>\r\n            <Pagination count={pages} variant=\"outlined\" onChange={(event, value) => setCurrPage(value)}/>\r\n          </Grid>\r\n        </Grid>\r\n        <Drawer variant=\"temporary\" anchor={\"right\"} \r\n        open={filterDrawer} \r\n        classes={{paper: classes.drawerPaper}} \r\n        onClose={() => setFilterDrawer(false)} \r\n      >\r\n        <Grid >\r\n          <Grid item xs={12} className={classes.filterStudentsTitle}>\r\n            <Typography variant=\"h5\" align=\"center\">Filter Students by Course</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.search}>\r\n            <Autocomplete\r\n              options={courses}\r\n              getOptionLabel={(course) => course.courseTitle}\r\n              className={classes.autoComplete}\r\n              onChange={(event, value, reason) => handleCourseFilter(value ?? null)}\r\n              renderInput={(params) => \r\n                (\r\n                  <TextField {...params} label=\"Courses\" variant=\"outlined\" />\r\n                )}\r\n              inputValue={textInput}\r\n            />\r\n          </Grid>\r\n          <Divider />\r\n          <Box className={classes.chips}>\r\n            {chipData.map((course) => (\r\n              <Chip label={course.courseTitle} className={classes.chipStyle}  onDelete={() => handleChipDelete(course)} />\r\n              ))}\r\n          </Box>\r\n        </Grid>\r\n      </Drawer>\r\n      </>\r\n    :\r\n      <div className={classes.loading} color=\"secondary\">\r\n        <CircularProgress size={100} />\r\n      </div>\r\n    }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Students;",["272","273"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\AbsenceStartGraph.tsx",["274"],"import { useAuth0 } from '@auth0/auth0-react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Area,\r\n  AreaChart,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from 'recharts';\r\nimport StudentController from '../../api/StudentController';\r\n\r\nconst AbsenceStartGraph = () => {\r\n\r\n  const Auth0 = useAuth0();\r\n  const controller = new StudentController();\r\n  const [data, setData] = useState([]);\r\n  useEffect(() =>{\r\n    fetchData();\r\n  },[])\r\n\r\n  async function fetchData(){\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    const response = await controller.GetAbsenceStartingData(token);\r\n    const newResponse = response.map((item:any,i:number) => {\r\n      return {name: `Period ${i+1}`, attendance: Math.ceil((item.attended/item.teaching)*100)}\r\n    })\r\n    setData(newResponse);\r\n  }\r\n  return (\r\n    <div style={{ height: \"19rem\", width: \"99%\" }}>\r\n    <ResponsiveContainer width=\"99%\" height=\"99%\">\r\n    <AreaChart\r\n      data={data}\r\n      margin={{\r\n        top: 10,\r\n        right: 30,\r\n        left: 0,\r\n        bottom: 0,\r\n      }}\r\n    >\r\n      <defs>\r\n          <linearGradient id='color15' x1='0' y1='0' x2='0' y2='1'>\r\n             <stop offset='5%' stopColor='#EBF6FC' stopOpacity={0.8} />\r\n             <stop offset='95%' stopColor='#fff' stopOpacity={0.8} />\r\n          </linearGradient>\r\n      </defs>\r\n      <XAxis dataKey=\"name\" />\r\n      <YAxis domain={[0, 100]}/>\r\n      <Tooltip formatter={(value:number) => `${value}%`}/>\r\n      <CartesianGrid />\r\n      <Area\r\n          type='monotone'\r\n          dataKey='attendance'\r\n          strokeWidth={4}\r\n          stackId='2'\r\n          stroke='#18A0FB'\r\n          fill='url(#color15)'\r\n          fillOpacity={1}\r\n        />\r\n    </AreaChart>\r\n  </ResponsiveContainer>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default AbsenceStartGraph;\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\TopBar.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Profile.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\DashboardConfig.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\TopBarStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\CourseController.ts",[],["275","276"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\FileUpload.tsx",["277","278"],"import React, { useContext, useState } from 'react'\r\nimport \"../styles/FileUpload.css\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport * as XLSX from 'xlsx';\r\nimport {parse, ParseResult} from 'papaparse';\r\nimport { Typography } from '@material-ui/core';\r\nimport { UploadContext } from '../context/UploadContext';\r\nimport UploadModel from '../models/UploadModel';\r\n\r\nconst dataHeaders = [\r\n  \"userId\",\r\n  \"studyLevel\",\r\n  \"courseYear\",\r\n  \"regStatus\",\r\n  \"courseTitle\",\r\n  \"courseCode\",\r\n  \"teaching\",\r\n  \"attended\",\r\n  \"explained\",\r\n  \"nonAttended\",\r\n  \"percentAttendance\",\r\n  \"unexcusedPercentAttendance\",\r\n  \"lastAttendance\"\r\n];\r\n\r\n\r\nfunction FileUpload() {\r\n    const uploadContext = useContext(UploadContext)\r\n    async function handleUpload(e: React.DragEvent){\r\n        e.preventDefault();\r\n        const file = await e.dataTransfer.files[0];\r\n        if(file.name.split('.')[1] === 'csv'){\r\n          let csv = await file.text();\r\n          let csvRows = csv.split(\"\\n\");\r\n          csvRows[0] = dataHeaders.join();\r\n          csv = csvRows.join(\"\\n\");\r\n          const parseResponse = parse(csv, {header:true}).data;\r\n          const parsedData : UploadModel[] = parseResponse.map((row:any,i) => {\r\n            const newRow : UploadModel = {\r\n              id: i,\r\n              userId: parseInt(row.userId),\r\n              studyLevel: row.studyLevel,\r\n              courseYear: row.courseYear,\r\n              regStatus: row.regStatus,\r\n              courseTitle: row.courseTitle,\r\n              courseCode: row.courseCode,\r\n              teaching: parseInt(row.teaching),\r\n              attended: parseInt(row.attended),\r\n              explained: parseInt(row.explained),\r\n              nonAttended: parseInt(row.nonAttended),\r\n              percentAttendance: parseFloat(row.percentAttendance),\r\n              unexcusedPercentAttendance: parseFloat(row.unexcusedPercentAttendance),\r\n              lastAttendance: new Date(row.lastAttendance)\r\n            }\r\n            return newRow;\r\n          });\r\n          uploadContext.setUploadedData(parsedData)\r\n        } else if(file.name.split('.')[1] === 'xls' || file.name.split('.')[1] === 'xlsx'){\r\n          const reader = new FileReader();\r\n          reader.onload = e => {\r\n            let data = e.target?.result;\r\n            let workbookData = XLSX.read(data, {type: 'binary', cellDates: true});\r\n            const worksheet = workbookData.Sheets[workbookData.SheetNames[0]];\r\n            let parsedData : UploadModel[] = XLSX.utils.sheet_to_json(worksheet , {header: dataHeaders, range:1});\r\n            uploadContext.setUploadedData(parsedData)\r\n          }\r\n          reader.readAsBinaryString(file);\r\n        }\r\n      }\r\n    return (\r\n        <div className=\"upload\"\r\n          onDragOver={e => e.preventDefault()}\r\n          onDrop={handleUpload}\r\n        >\r\n            <CloudUploadIcon fontSize=\"large\"/>\r\n            <Typography>{uploadContext.uploadedData.length === 0 ? \"File not uploaded\" : \"File uploaded\"}</Typography>            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default FileUpload\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\StudentCard.tsx",["279","280","281"],"import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport StudentImage from '../../assets/studentsIcon.png';\r\nimport TouchRipple from \"@material-ui/core/ButtonBase/TouchRipple\";\r\n\r\ninterface StudentCardProps {\r\n  studentId: number;\r\n}\r\n\r\nfunction StudentCard(props: StudentCardProps) {\r\n  const history = useHistory();\r\n  return (\r\n    <ButtonBase style={{width: '100%'}}>\r\n      <Card onClick={() => history.push(`students/${props.studentId}`)} style={{width: '100%'}}>\r\n        <CardContent>\r\n            <Box style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                <Box>\r\n                    <Typography variant=\"h6\" style={{display:'flex'}}>\r\n                        Student\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" style={{display:'flex'}}>\r\n                        {props.studentId}\r\n                    </Typography>\r\n                </Box>\r\n                <Box style={{display:'flex', justifyContent: 'center', alignItems: 'center', padding: '5px 10px 5px 10px', backgroundColor: 'lightblue', borderRadius: '50%'}}>\r\n                    <img style={{height: '70%'}} src={'https://img.icons8.com/color/48/000000/student-male--v1.png'} />\r\n                </Box>\r\n            </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </ButtonBase>\r\n  );\r\n}\r\nexport default StudentCard;\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Courses\\CourseBar.tsx",["282"],"import { useAuth0 } from '@auth0/auth0-react';\r\nimport { ResponsiveBarCanvas } from '@nivo/bar'\r\nimport percentRound from 'percent-round';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport CourseController from '../../api/CourseController';\r\nimport { CourseContext } from '../../context/CourseContext';\r\nimport AbsenceReasonsResponse from '../../models/AbsenceReasonsResponse';\r\nimport BarProps from '../../models/BarProps'\r\n\r\nfunction CourseBar() {\r\n    const Auth0 = useAuth0();\r\n    const controller = new CourseController();\r\n    const coursesContext = useContext(CourseContext)\r\n    const [chartData, setChartData] = useState<BarProps[]>([]);\r\n\r\n    useEffect(() => {\r\n      getChartData();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[coursesContext.selectedCourses])\r\n    \r\n    async function getChartData(){\r\n      const token = await Auth0.getAccessTokenSilently();\r\n      const res: AbsenceReasonsResponse = await controller.GetAbsenceData(\r\n          coursesContext.selectedCourses.map((el) => el.courseCode),\r\n          token\r\n        );\r\n      const newBarData : BarProps[] = []\r\n      res.absenceReasons.forEach(reason => {\r\n        newBarData.push({year: reason.year.toString(), attendance: Math.ceil((reason.attended / reason.teaching) * 100)})\r\n      });\r\n      setChartData(newBarData)\r\n    }\r\n    return (\r\n        <ResponsiveBarCanvas\r\n        data={chartData}\r\n        keys={[ 'attendance' ]}\r\n        indexBy=\"year\"\r\n        margin={{ top: 50, right: 60, bottom: 50, left: 60 }}\r\n        padding={0.3}\r\n        maxValue={100}\r\n        groupMode=\"grouped\"\r\n        valueScale={{ type: 'linear' }}\r\n        indexScale={{ type: 'band', round: true }}\r\n        colors={() => 'rgb(44, 160, 44)'}\r\n        borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n        axisBottom={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'YEAR',\r\n            legendPosition: 'middle',\r\n            legendOffset: 32\r\n        }}\r\n        axisLeft={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'Attendance (%)',\r\n            legendPosition: 'middle',\r\n            legendOffset: -40\r\n        }}\r\n        labelSkipWidth={12}\r\n        labelSkipHeight={12}\r\n        labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n        label={(item) => `${item.value}%`}\r\n    />\r\n    )\r\n}\r\n\r\nexport default CourseBar\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\FileController.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\SmallInfo.tsx",["283"],"import { Box, Card, CardContent, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\ninterface SmallInfoProps {\r\n    title: string;\r\n    data: string;\r\n    imagesrc: string;\r\n}\r\n\r\nconst SmallInfo = (props:SmallInfoProps) => {\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Box style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                    <Box>\r\n                        <Typography style={{whiteSpace: \"nowrap\",width: '140px',textOverflow: 'ellipsis', overflow: 'hidden'}}>\r\n                            {props.title}\r\n                        </Typography>\r\n                        <Typography variant=\"h4\">\r\n                            {props.data}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box style={{display:'flex', justifyContent: 'center', alignItems: 'center',marginRight: '10%', padding: '5px 10px 5px 10px', backgroundColor: 'lightblue', borderRadius: '50%'}}>\r\n                        <img style={{height: '70%'}} src={props.imagesrc} />\r\n                    </Box>\r\n                </Box>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default SmallInfo\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Students\\Email.tsx",["284"],"import { Button, Dialog, DialogContent, DialogTitle, TextField } from \"@material-ui/core\";\r\nimport { Person, School, Star } from \"@material-ui/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { VerticalTimeline, VerticalTimelineElement } from \"react-vertical-timeline-component\";\r\nimport \"react-vertical-timeline-component/style.min.css\";\r\nimport { useSnackbar } from 'notistack';\r\nimport CommunicationController from \"../../api/CommunicationController\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport Moment from \"react-moment\";\r\nimport EmailReminders from '../../config/EmailReminders';\r\n\r\ninterface EmailProps{\r\n  email:string;\r\n  name: number;\r\n}\r\n\r\nfunction Email(props: EmailProps) {\r\n  const Auth0 = useAuth0();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [openNewEmailDialog, setNewEmailDialog] = useState(false);\r\n  const controller = new CommunicationController(); \r\n  const [data, setData] = useState([]); \r\n  const [emailContent, setEmailContent] = useState('Dear Student,');\r\n  const [emailSubject, setEmailSubject] = useState('Attendance Information');\r\n\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    GetEmails();\r\n    console.log(Auth0.user)\r\n  },[]);\r\n\r\n  async function GetEmails(){\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    let res = await controller.GetConversations(token,props.email);\r\n    setData(res.reverse());\r\n  }\r\n\r\n  async function sendEmail(){\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    const res = await controller.SendEmail(token,{\r\n        fromName:\"AttendancePro\",\r\n        fromEmail:\"admin@em2322.attendancepro.co.uk\",\r\n        toName:props.name.toString(),\r\n        toEmail:props.email,\r\n        subject:emailSubject,\r\n        content:`${emailContent}`,\r\n        htmlContent:`${emailContent}`\r\n    });\r\n    if(res){\r\n        enqueueSnackbar('Email sent!', { variant: \"success\" });\r\n        GetEmails();\r\n    }else{\r\n        enqueueSnackbar('Error occurred!', { variant: \"error\" });\r\n    }\r\n    setNewEmailDialog(false);\r\n  }\r\n\r\n  function filterEmail(email:string){\r\n    let cleanEmailArr = email.replace(/\\n/g, \"<br />\").split(\"<br />\");\r\n    let index = 0;\r\n    for(let i = 0; i < cleanEmailArr.length; i++){\r\n      if(cleanEmailArr[i].includes(\"admin@em2322.attendancepro.co.uk\")){\r\n        index = i - 1;\r\n        break;\r\n      }\r\n    }\r\n    let response = cleanEmailArr.slice(0, index).join(\"<br />\");\r\n    console.log(response === \"\");\r\n    return response === \"\" ? email : response;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={() => {\r\n        setEmailSubject('Attendance Information');\r\n        setEmailContent('Dear Student,')\r\n        setNewEmailDialog(true)\r\n      }} style={{marginTop: '5px'}}>\r\n      Send New Email\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={() => {\r\n        setEmailSubject(\"Warning #1\");\r\n        setEmailContent(EmailReminders[0])\r\n        setNewEmailDialog(true)\r\n      }} style={{marginLeft: '5px',marginTop: '5px', marginRight: '5px'}}>\r\n      First Reminder\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={() => {\r\n        setEmailSubject(\"Warning #2\");\r\n        setEmailContent(EmailReminders[1])\r\n        setNewEmailDialog(true)\r\n      }} style={{marginTop: '5px', marginRight: '5px'}}>\r\n      Second Reminder\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={() => {\r\n        setEmailSubject(\"Warning #3 (Final Warning)\");\r\n        setEmailContent(EmailReminders[2])\r\n        setNewEmailDialog(true)\r\n      }} style={{marginTop: '5px', marginRight: '5px'}}>\r\n      Third Reminder\r\n      </Button>\r\n      <VerticalTimeline>\r\n        {data.map((email:any,i) => (\r\n            <VerticalTimelineElement\r\n            className=\"vertical-timeline-element--work\"\r\n            contentStyle={{ background: \"rgb(33, 150, 243)\", color: \"#fff\" }}\r\n            contentArrowStyle={{ borderRight: \"7px solid  rgb(33, 150, 243)\" }}\r\n            iconStyle={{ background: \"rgb(33, 150, 243)\", color: \"#fff\" }}\r\n            icon={email.fromEmail === \"admin@em2322.attendancepro.co.uk\" ? <School /> : <Person />}\r\n            >\r\n            <h3 className=\"vertical-timeline-element-title\">{email.fromEmail === \"admin@em2322.attendancepro.co.uk\" ? 'Staff' : 'Student'}</h3>\r\n            <h4 className=\"vertical-timeline-element-subtitle\">Date: <Moment format=\"DD/MM/YYYY HH:mm\">{email.date}</Moment></h4>\r\n            <h4 className=\"vertical-timeline-element-subtitle\">University of Sussex</h4>\r\n            <div dangerouslySetInnerHTML={{__html: email.fromEmail === \"admin@em2322.attendancepro.co.uk\" ? email.content : filterEmail(email.content)}} />\r\n            </VerticalTimelineElement>\r\n        ))}\r\n        <VerticalTimelineElement\r\n          iconStyle={{ background: \"rgb(16, 204, 82)\", color: \"#fff\" }}\r\n          icon={<Star />}\r\n        />\r\n      </VerticalTimeline>\r\n      <Dialog open={openNewEmailDialog} onClose={() => setNewEmailDialog(false)} aria-labelledby=\"form-dialog-title\" fullWidth>\r\n        <DialogTitle id=\"form-dialog-title\">New Email</DialogTitle>\r\n        <DialogContent>\r\n            <TextField\r\n            style={{marginBottom: '2%'}}\r\n            label=\"Subject\"\r\n            rows={1}\r\n            value={emailSubject}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={(e) => setEmailSubject(e.target.value)}\r\n            />\r\n            <TextField\r\n            label=\"Email\"\r\n            multiline\r\n            rows={8}\r\n            defaultValue={emailContent}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={(e) => setEmailContent(e.target.value)}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" style={{marginTop: '20px'}} onClick={sendEmail}>\r\n            Send\r\n            </Button>\r\n        </DialogContent>\r\n       </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Email;\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\UploadedDataCheck.tsx",["285"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { DataGrid, ColDef } from '@material-ui/data-grid';\r\nimport { UploadContext } from '../context/UploadContext';\r\nimport UploadModel from '../models/UploadModel';\r\nimport FileUploadStyles from '../styles/FileUploadStyles';\r\n\r\nconst columns: ColDef[] = [\r\n  { field: 'userId', headerName: 'User', width: 120},\r\n  { field: 'studyLevel', headerName: 'Level of Study', width: 150 },\r\n  { field: 'regStatus', headerName: 'Registration Status', width: 180 },\r\n  { field: 'courseTitle', headerName: 'Course Title', width: 200 },\r\n  { field: 'courseCode', headerName: 'Course Code', width: 140 },\r\n  { field: 'teaching', headerName: 'Teaching Sessions', width: 180 },\r\n  { field: 'attended', headerName: 'Attended', width: 120 },\r\n  { field: 'explained', headerName: 'Explained Absences', width: 200 },\r\n  { field: 'nonAttended', headerName: 'Non Attendance', width: 160 },\r\n  { field: 'percentAttendance', headerName: '% Attendance', width: 150 },\r\n  { field: 'unexcusedPercentAttendance', headerName: '% Attendance (Unexcused)', width: 230 },\r\n  { field: 'lastAttendance', headerName: 'Last Attendance', width: 160 },\r\n];\r\n\r\nexport default function UploadedDataCheck() {\r\n  const classes = FileUploadStyles();\r\n  const [rows, setRows] = useState<UploadModel[]>([])\r\n  const uploadContext = useContext(UploadContext);\r\n  useEffect(() => {\r\n      const newRows = uploadContext.uploadedData.map((row,i) => {\r\n          return { \r\n            id: i+1, \r\n            userId: row.userId, \r\n            studyLevel: row.studyLevel, \r\n            courseYear: row.courseYear,\r\n            regStatus: row.regStatus,\r\n            courseTitle: row.courseTitle, \r\n            courseCode: row.courseCode,\r\n            teaching: row.teaching, \r\n            attended: row.attended,\r\n            explained: row.explained, \r\n            nonAttended: row.nonAttended,\r\n            percentAttendance: parseInt((row.percentAttendance * 100).toFixed(2)),\r\n            unexcusedPercentAttendance: parseInt((row.unexcusedPercentAttendance * 100).toFixed(2)),\r\n            lastAttendance: row.lastAttendance, \r\n        }\r\n      });\r\n      setRows(newRows);\r\n  },[])\r\n\r\n  return (\r\n    <div className={classes.dataCheck}>\r\n      <DataGrid rows={rows} columns={columns} pageSize={5} autoHeight hideFooterSelectedRowCount/>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\StudentsTable.tsx",["286"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\EmailReminders.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Layout.tsx",["287"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\App.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\FileUploadStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Home\\StudentsTableHeader.tsx",[],{"ruleId":"288","severity":1,"message":"289","line":2,"column":56,"nodeType":"290","messageId":"291","endLine":2,"endColumn":63},{"ruleId":"292","severity":1,"message":"293","line":25,"column":6,"nodeType":"294","endLine":25,"endColumn":8,"suggestions":"295"},{"ruleId":"296","severity":1,"message":"297","line":16,"column":25,"nodeType":"298","messageId":"299","endLine":16,"endColumn":27},{"ruleId":"292","severity":1,"message":"300","line":27,"column":5,"nodeType":"294","endLine":27,"endColumn":7,"suggestions":"301"},{"ruleId":"292","severity":1,"message":"302","line":41,"column":7,"nodeType":"294","endLine":41,"endColumn":9,"suggestions":"303"},{"ruleId":"304","severity":1,"message":"305","line":48,"column":27,"nodeType":"306","messageId":"307","endLine":48,"endColumn":29},{"ruleId":"308","severity":1,"message":"309","line":55,"column":54,"nodeType":"310","messageId":"311","endLine":55,"endColumn":55},{"ruleId":"312","severity":1,"message":"313","line":110,"column":37,"nodeType":"314","endLine":110,"endColumn":136},{"ruleId":"315","replacedBy":"316"},{"ruleId":"317","replacedBy":"318"},{"ruleId":"315","replacedBy":"319"},{"ruleId":"317","replacedBy":"320"},{"ruleId":"315","replacedBy":"321"},{"ruleId":"317","replacedBy":"322"},{"ruleId":"292","severity":1,"message":"323","line":28,"column":5,"nodeType":"294","endLine":28,"endColumn":21,"suggestions":"324"},{"ruleId":"288","severity":1,"message":"325","line":2,"column":15,"nodeType":"290","messageId":"291","endLine":2,"endColumn":21},{"ruleId":"288","severity":1,"message":"326","line":6,"column":8,"nodeType":"290","messageId":"291","endLine":6,"endColumn":19},{"ruleId":"292","severity":1,"message":"327","line":29,"column":7,"nodeType":"294","endLine":29,"endColumn":41,"suggestions":"328"},{"ruleId":"288","severity":1,"message":"329","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":19},{"ruleId":"288","severity":1,"message":"330","line":2,"column":21,"nodeType":"290","messageId":"291","endLine":2,"endColumn":25},{"ruleId":"296","severity":1,"message":"297","line":14,"column":33,"nodeType":"298","messageId":"299","endLine":14,"endColumn":35},{"ruleId":"292","severity":1,"message":"300","line":17,"column":7,"nodeType":"294","endLine":17,"endColumn":9,"suggestions":"331"},{"ruleId":"292","severity":1,"message":"332","line":23,"column":7,"nodeType":"294","endLine":23,"endColumn":39,"suggestions":"333"},{"ruleId":"315","replacedBy":"334"},{"ruleId":"317","replacedBy":"335"},{"ruleId":"292","severity":1,"message":"336","line":15,"column":6,"nodeType":"294","endLine":15,"endColumn":38,"suggestions":"337"},{"ruleId":"296","severity":1,"message":"297","line":27,"column":20,"nodeType":"298","messageId":"299","endLine":27,"endColumn":22},{"ruleId":"296","severity":1,"message":"297","line":29,"column":36,"nodeType":"298","messageId":"299","endLine":29,"endColumn":38},{"ruleId":"288","severity":1,"message":"338","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":16},{"ruleId":"288","severity":1,"message":"339","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":13},{"ruleId":"288","severity":1,"message":"340","line":3,"column":15,"nodeType":"290","messageId":"291","endLine":3,"endColumn":25},{"ruleId":"288","severity":1,"message":"341","line":4,"column":10,"nodeType":"290","messageId":"291","endLine":4,"endColumn":19},{"ruleId":"292","severity":1,"message":"342","line":26,"column":5,"nodeType":"294","endLine":26,"endColumn":7,"suggestions":"343"},{"ruleId":"292","severity":1,"message":"344","line":14,"column":7,"nodeType":"294","endLine":14,"endColumn":9,"suggestions":"345"},{"ruleId":"315","replacedBy":"346"},{"ruleId":"317","replacedBy":"347"},{"ruleId":"315","replacedBy":"348"},{"ruleId":"317","replacedBy":"349"},{"ruleId":"288","severity":1,"message":"350","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":31},{"ruleId":"292","severity":1,"message":"332","line":16,"column":7,"nodeType":"294","endLine":16,"endColumn":39,"suggestions":"351"},{"ruleId":"296","severity":1,"message":"297","line":25,"column":30,"nodeType":"298","messageId":"299","endLine":25,"endColumn":32},{"ruleId":"292","severity":1,"message":"352","line":33,"column":5,"nodeType":"294","endLine":33,"endColumn":42,"suggestions":"353"},{"ruleId":"292","severity":1,"message":"354","line":38,"column":5,"nodeType":"294","endLine":38,"endColumn":24,"suggestions":"355"},{"ruleId":"315","replacedBy":"356"},{"ruleId":"317","replacedBy":"357"},{"ruleId":"292","severity":1,"message":"344","line":21,"column":5,"nodeType":"294","endLine":21,"endColumn":7,"suggestions":"358"},{"ruleId":"315","replacedBy":"359"},{"ruleId":"317","replacedBy":"360"},{"ruleId":"288","severity":1,"message":"361","line":1,"column":29,"nodeType":"290","messageId":"291","endLine":1,"endColumn":37},{"ruleId":"288","severity":1,"message":"362","line":5,"column":16,"nodeType":"290","messageId":"291","endLine":5,"endColumn":27},{"ruleId":"288","severity":1,"message":"363","line":8,"column":8,"nodeType":"290","messageId":"291","endLine":8,"endColumn":20},{"ruleId":"288","severity":1,"message":"364","line":9,"column":8,"nodeType":"290","messageId":"291","endLine":9,"endColumn":19},{"ruleId":"312","severity":1,"message":"313","line":31,"column":21,"nodeType":"314","endLine":31,"endColumn":120},{"ruleId":"288","severity":1,"message":"365","line":3,"column":8,"nodeType":"290","messageId":"291","endLine":3,"endColumn":20},{"ruleId":"312","severity":1,"message":"313","line":24,"column":25,"nodeType":"314","endLine":24,"endColumn":77},{"ruleId":"292","severity":1,"message":"366","line":32,"column":5,"nodeType":"294","endLine":32,"endColumn":7,"suggestions":"367"},{"ruleId":"292","severity":1,"message":"368","line":46,"column":5,"nodeType":"294","endLine":46,"endColumn":7,"suggestions":"369"},{"ruleId":"292","severity":1,"message":"370","line":19,"column":7,"nodeType":"294","endLine":19,"endColumn":23,"suggestions":"371"},{"ruleId":"292","severity":1,"message":"372","line":20,"column":5,"nodeType":"294","endLine":20,"endColumn":7,"suggestions":"373"},"@typescript-eslint/no-unused-vars","'SvgIcon' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GetCourses'. Either include it or remove the dependency array.","ArrayExpression",["374"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array.",["375"],"React Hook useEffect has missing dependencies: 'appContext' and 'fetchData'. Either include them or remove the dependency array.",["376"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["377"],"no-negated-in-lhs",["378"],["377"],["378"],["377"],["378"],"React Hook useEffect has missing dependencies: 'GetNotAttendingAbsentees' and 'GetPersistentAbsentees'. Either include them or remove the dependency array.",["379"],"'Hidden' is defined but never used.","'StudentData' is defined but never used.","React Hook useEffect has missing dependencies: 'GetNotAttendingStudents' and 'GetPersistentStudents'. Either include them or remove the dependency array.",["380"],"'LineChart' is defined but never used.","'Line' is defined but never used.",["381"],"React Hook useEffect has a missing dependency: 'getChartData'. Either include it or remove the dependency array.",["382"],["377"],["378"],"React Hook useEffect has a missing dependency: 'GetChartData'. Either include it or remove the dependency array.",["383"],"'Player' is defined but never used.","'Box' is defined but never used.","'ButtonBase' is defined but never used.","'SwapHoriz' is defined but never used.","React Hook useEffect has missing dependencies: 'getAverageAttendance', 'getNotAttendingStudentsCount', 'getPersistentStudentsCount', and 'getSmallCardData'. Either include them or remove the dependency array.",["384"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["385"],["377"],["378"],["377"],["378"],"'ResponsiveScatterPlot' is defined but never used.",["386"],"React Hook useEffect has missing dependencies: 'GetStudents' and 'setPagesCount'. Either include them or remove the dependency array.",["387"],"React Hook useEffect has missing dependencies: 'GetCourses' and 'GetStudents'. Either include them or remove the dependency array.",["388"],["377"],["378"],["389"],["377"],["378"],"'useState' is defined but never used.","'ParseResult' is defined but never used.","'StudentImage' is defined but never used.","'TouchRipple' is defined but never used.","'percentRound' is defined but never used.","React Hook useEffect has missing dependencies: 'Auth0.user' and 'GetEmails'. Either include them or remove the dependency array.",["390"],"React Hook useEffect has a missing dependency: 'uploadContext.uploadedData'. Either include it or remove the dependency array.",["391"],"React Hook useEffect has missing dependencies: 'GetNotAttendingStudentsCount' and 'GetPersistentStudents'. Either include them or remove the dependency array.",["392"],"React Hook useEffect has a missing dependency: 'Auth0'. Either include it or remove the dependency array.",["393"],{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},"no-global-assign","no-unsafe-negation",{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},{"desc":"396","fix":"404"},{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},{"desc":"411","fix":"412"},{"desc":"405","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},{"desc":"411","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},"Update the dependencies array to be: [GetCourses]",{"range":"427","text":"428"},"Update the dependencies array to be: [props.data]",{"range":"429","text":"430"},"Update the dependencies array to be: [appContext, fetchData]",{"range":"431","text":"432"},"Update the dependencies array to be: [GetNotAttendingAbsentees, GetPersistentAbsentees, showPersistent]",{"range":"433","text":"434"},"Update the dependencies array to be: [GetNotAttendingStudents, GetPersistentStudents, props.page, props.persistentView]",{"range":"435","text":"436"},{"range":"437","text":"430"},"Update the dependencies array to be: [coursesContext.selectedCourses, getChartData]",{"range":"438","text":"439"},"Update the dependencies array to be: [GetChartData, coursesContext.selectedCourses]",{"range":"440","text":"441"},"Update the dependencies array to be: [getAverageAttendance, getNotAttendingStudentsCount, getPersistentStudentsCount, getSmallCardData]",{"range":"442","text":"443"},"Update the dependencies array to be: [fetchData]",{"range":"444","text":"445"},{"range":"446","text":"439"},"Update the dependencies array to be: [GetStudents, appContext.searchBarValue, chipData, setPagesCount]",{"range":"447","text":"448"},"Update the dependencies array to be: [currPage, chipData, GetCourses, GetStudents]",{"range":"449","text":"450"},{"range":"451","text":"445"},"Update the dependencies array to be: [Auth0.user, GetEmails]",{"range":"452","text":"453"},"Update the dependencies array to be: [uploadContext.uploadedData]",{"range":"454","text":"455"},"Update the dependencies array to be: [GetNotAttendingStudentsCount, GetPersistentStudents, showPersistent]",{"range":"456","text":"457"},"Update the dependencies array to be: [Auth0]",{"range":"458","text":"459"},[1146,1148],"[GetCourses]",[1087,1089],"[props.data]",[1701,1703],"[appContext, fetchData]",[765,781],"[GetNotAttendingAbsentees, GetPersistentAbsentees, showPersistent]",[841,875],"[GetNotAttendingStudents, GetPersistentStudents, props.page, props.persistentView]",[662,664],[1105,1137],"[coursesContext.selectedCourses, getChartData]",[550,582],"[GetChartData, coursesContext.selectedCourses]",[1325,1327],"[getAverageAttendance, getNotAttendingStudentsCount, getPersistentStudentsCount, getSmallCardData]",[425,427],"[fetchData]",[664,696],[1568,1605],"[GetStudents, appContext.searchBarValue, chipData, setPagesCount]",[1677,1696],"[currPage, chipData, GetCourses, GetStudents]",[488,490],[1190,1192],"[Auth0.user, GetEmails]",[2200,2202],"[uploadContext.uploadedData]",[871,887],"[GetNotAttendingStudentsCount, GetPersistentStudents, showPersistent]",[820,822],"[Auth0]"]