[{"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\index.tsx":"1","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\TopBar.tsx":"2","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\DashboardConfig.ts":"3","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\TopBarStyles.ts":"4","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Home.tsx":"5","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Upload.tsx":"6","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\LayoutStyles.ts":"7","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\AuthConfig.ts":"8","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Drawer.tsx":"9","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Students.tsx":"10","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\Routes.ts":"11","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Login.tsx":"12","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Layout.tsx":"13","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Profile.tsx":"14","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\UserContext.tsx":"15","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\FileUpload.tsx":"16","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\UploadContext.tsx":"17","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\App.tsx":"18","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\UploadedDataCheck.tsx":"19","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\FileUploadStyles.ts":"20","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\FileController.ts":"21","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\UserController.ts":"22","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\StudentCard.tsx":"23","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\StudentController.ts":"24","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\AppContext.tsx":"25","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\StudentPage.tsx":"26","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\LineGraph.tsx":"27","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\PieChart.tsx":"28","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Courses.tsx":"29","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\Theme.ts":"30","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\CourseController.ts":"31","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\CourseVisulisations.tsx":"32","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\CoursePie.tsx":"33","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\CourseBar.tsx":"34","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\HeatMap.tsx":"35","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\ScatterDiagram.tsx":"36","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\GraphDialog.tsx":"37","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\CoursesStyles.ts":"38","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\StudentsStyles.ts":"39","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Email.tsx":"40","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\CommunicationController.ts":"41","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\StepperStyles.ts":"42"},{"size":544,"mtime":1610851140855,"results":"43","hashOfConfig":"44"},{"size":2136,"mtime":1611789525908,"results":"45","hashOfConfig":"44"},{"size":128,"mtime":1610851140851,"results":"46","hashOfConfig":"44"},{"size":1661,"mtime":1610851140858,"results":"47","hashOfConfig":"44"},{"size":145,"mtime":1611786467063,"results":"48","hashOfConfig":"44"},{"size":3615,"mtime":1611520088919,"results":"49","hashOfConfig":"44"},{"size":1334,"mtime":1610851140857,"results":"50","hashOfConfig":"44"},{"size":334,"mtime":1611520088915,"results":"51","hashOfConfig":"44"},{"size":1195,"mtime":1611229003724,"results":"52","hashOfConfig":"44"},{"size":2231,"mtime":1612726258466,"results":"53","hashOfConfig":"44"},{"size":758,"mtime":1612218045466,"results":"54","hashOfConfig":"44"},{"size":1725,"mtime":1610851140860,"results":"55","hashOfConfig":"44"},{"size":2526,"mtime":1612217153226,"results":"56","hashOfConfig":"44"},{"size":2199,"mtime":1610851140848,"results":"57","hashOfConfig":"44"},{"size":551,"mtime":1610851140853,"results":"58","hashOfConfig":"44"},{"size":3092,"mtime":1612104198322,"results":"59","hashOfConfig":"44"},{"size":945,"mtime":1612094553146,"results":"60","hashOfConfig":"44"},{"size":825,"mtime":1611304199160,"results":"61","hashOfConfig":"44"},{"size":2381,"mtime":1612726773533,"results":"62","hashOfConfig":"44"},{"size":331,"mtime":1612726723330,"results":"63","hashOfConfig":"44"},{"size":588,"mtime":1612096446652,"results":"64","hashOfConfig":"44"},{"size":499,"mtime":1611326685780,"results":"65","hashOfConfig":"44"},{"size":937,"mtime":1612896652443,"results":"66","hashOfConfig":"44"},{"size":1321,"mtime":1612104198321,"results":"67","hashOfConfig":"44"},{"size":460,"mtime":1611789525910,"results":"68","hashOfConfig":"44"},{"size":9612,"mtime":1612869015240,"results":"69","hashOfConfig":"44"},{"size":1291,"mtime":1612727892218,"results":"70","hashOfConfig":"44"},{"size":1963,"mtime":1612727822103,"results":"71","hashOfConfig":"44"},{"size":3807,"mtime":1612725858148,"results":"72","hashOfConfig":"44"},{"size":261,"mtime":1611282321104,"results":"73","hashOfConfig":"44"},{"size":1838,"mtime":1612724562566,"results":"74","hashOfConfig":"44"},{"size":6185,"mtime":1612714639660,"results":"75","hashOfConfig":"44"},{"size":1467,"mtime":1612468529011,"results":"76","hashOfConfig":"44"},{"size":1410,"mtime":1612697707894,"results":"77","hashOfConfig":"44"},{"size":1564,"mtime":1612655932738,"results":"78","hashOfConfig":"44"},{"size":1949,"mtime":1612918748385,"results":"79","hashOfConfig":"44"},{"size":583,"mtime":1612713241871,"results":"80","hashOfConfig":"44"},{"size":760,"mtime":1612725840889,"results":"81","hashOfConfig":"44"},{"size":471,"mtime":1612726196097,"results":"82","hashOfConfig":"44"},{"size":3570,"mtime":1612886579429,"results":"83","hashOfConfig":"44"},{"size":899,"mtime":1612886091830,"results":"84","hashOfConfig":"44"},{"size":392,"mtime":1611326685791,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1orxqso",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\index.tsx",[],["180","181"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\TopBar.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\DashboardConfig.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\TopBarStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Home.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Upload.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\LayoutStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\AuthConfig.ts",[],["182","183"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Drawer.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Students.tsx",["184","185"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport StudentCard from \"../components/StudentCard\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport StudentController from \"../api/StudentController\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { useContext } from \"react\";\r\nimport StudentPage from \"../models/StudentPage\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport StudentsStyles from \"../styles/StudentsStyles\";\r\n\r\nconst Students = () => {\r\n  const classes = StudentsStyles();\r\n  const Auth0 = useAuth0();\r\n  const [pages, setPages] = useState(0);\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [students, setStudents] = useState<StudentPage[]>();\r\n  const controller = new StudentController();\r\n  const appContext = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    setPagesCount().then(() => GetStudents());\r\n  },[appContext.searchBarValue]);\r\n\r\n  useEffect(() => {\r\n    GetStudents();\r\n  },[currPage])\r\n\r\n  const setPagesCount = async() => {\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    setPages(Math.ceil(await controller.GetStudentCount(appContext.searchBarValue, token)/12))\r\n  }\r\n  \r\n  const GetStudents = async() => {\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    setStudents(await controller.GetStudentsPage(currPage, appContext.searchBarValue, token));\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {students ? \r\n      <Grid container spacing={3}>\r\n        <Grid xs={12} className={classes.title}>\r\n          <Typography variant=\"h4\">Students</Typography>\r\n        </Grid>\r\n        {students.map(student => (\r\n          <Grid item xs={12} sm={6} md={4} lg={3}>\r\n            <StudentCard studentId={student.userId}/>\r\n          </Grid>\r\n        ))}\r\n        <Grid xs={12} className={classes.pagination}>\r\n          <Pagination count={pages} variant=\"outlined\" onChange={(event, value) => setCurrPage(value)}/>\r\n        </Grid>\r\n      </Grid>\r\n    :\r\n      <div className={classes.loading} color=\"secondary\">\r\n        <CircularProgress size={100} />\r\n      </div>\r\n    }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Students;","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\Routes.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Login.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Layout.tsx",["186"],"import React, { useEffect, useState } from \"react\";\r\nimport { AppBar, CssBaseline, Hidden, IconButton, Toolbar, Drawer as DrawerMUI } from \"@material-ui/core\";\r\nimport { Menu } from \"@material-ui/icons\";\r\nimport LayoutStyles from \"../styles/LayoutStyles\";\r\nimport Drawer from \"./Drawer\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Routes from \"../config/Routes\";\r\nimport TopBar from \"./TopBar\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport Profile from \"./Profile\";\r\nimport StudentPage from \"./StudentPage\";\r\n\r\nconst Layout = () => {\r\n  const Auth0 = useAuth0();\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const classes = LayoutStyles();\r\n\r\n  useEffect(() => {\r\n    Auth0.getAccessTokenSilently().then((accessToken => console.log(accessToken)));\r\n  },[])\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n          <TopBar />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Router>\r\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n          <Hidden smUp implementation=\"css\">\r\n            <DrawerMUI\r\n              variant=\"temporary\"\r\n              open={mobileOpen}\r\n              onClose={handleDrawerToggle}\r\n              classes={{ paper: classes.drawerPaper }}\r\n              ModalProps={{ keepMounted: true }}\r\n            >\r\n              <Drawer />\r\n            </DrawerMUI>\r\n          </Hidden>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <DrawerMUI\r\n              classes={{ paper: classes.drawerPaper }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              <Drawer />\r\n            </DrawerMUI>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar} />\r\n          <Profile />\r\n          {Routes.map((tab, i) => (\r\n            <Route key={i} exact path={tab.path} component={tab.component} />\r\n            ))}\r\n          <Route exact path={\"/students/:student\"} component={StudentPage} />\r\n        </main>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Profile.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\UserContext.tsx",[],["187","188"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\FileUpload.tsx",["189","190"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\UploadContext.tsx",[],["191","192"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\App.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\UploadedDataCheck.tsx",["193"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { DataGrid, ColDef } from '@material-ui/data-grid';\r\nimport { UploadContext } from '../context/UploadContext';\r\nimport UploadModel from '../models/UploadModel';\r\nimport FileUploadStyles from '../styles/FileUploadStyles';\r\n\r\nconst columns: ColDef[] = [\r\n  { field: 'userId', headerName: 'User', width: 120},\r\n  { field: 'studyLevel', headerName: 'Level of Study', width: 150 },\r\n  { field: 'regStatus', headerName: 'Registration Status', width: 180 },\r\n  { field: 'courseTitle', headerName: 'Course Title', width: 200 },\r\n  { field: 'courseCode', headerName: 'Course Code', width: 140 },\r\n  { field: 'teaching', headerName: 'Teaching Sessions', width: 180 },\r\n  { field: 'attended', headerName: 'Attended', width: 120 },\r\n  { field: 'explained', headerName: 'Explained Absences', width: 200 },\r\n  { field: 'nonAttended', headerName: 'Non Attendance', width: 160 },\r\n  { field: 'percentAttendance', headerName: '% Attendance', width: 150 },\r\n  { field: 'unexcusedPercentAttendance', headerName: '% Attendance (Unexcused)', width: 230 },\r\n  { field: 'lastAttendance', headerName: 'Last Attendance', width: 160 },\r\n];\r\n\r\nexport default function UploadedDataCheck() {\r\n  const classes = FileUploadStyles();\r\n  const [rows, setRows] = useState<UploadModel[]>([])\r\n  const uploadContext = useContext(UploadContext);\r\n  useEffect(() => {\r\n      const newRows = uploadContext.uploadedData.map((row,i) => {\r\n          return { \r\n            id: i+1, \r\n            userId: row.userId, \r\n            studyLevel: row.studyLevel, \r\n            courseYear: row.courseYear,\r\n            regStatus: row.regStatus,\r\n            courseTitle: row.courseTitle, \r\n            courseCode: row.courseCode,\r\n            teaching: row.teaching, \r\n            attended: row.attended,\r\n            explained: row.explained, \r\n            nonAttended: row.nonAttended,\r\n            percentAttendance: parseInt((row.percentAttendance * 100).toFixed(2)),\r\n            unexcusedPercentAttendance: parseInt((row.unexcusedPercentAttendance * 100).toFixed(2)),\r\n            lastAttendance: row.lastAttendance, \r\n        }\r\n      });\r\n      setRows(newRows);\r\n  },[])\r\n\r\n  return (\r\n    <div className={classes.dataCheck}>\r\n      <DataGrid rows={rows} columns={columns} pageSize={5} autoHeight hideFooterSelectedRowCount/>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\FileUploadStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\FileController.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\UserController.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\StudentCard.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\StudentController.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\context\\AppContext.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\StudentPage.tsx",["194","195","196"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSnackbar } from 'notistack';\r\nimport StudentController from '../api/StudentController';\r\nimport Student from '../models/Student'\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport { Avatar, Box, ButtonBase, Card, CircularProgress, Grid, Hidden, Typography } from '@material-ui/core';\r\nimport {Bookmark, Fullscreen, MailOutline, PersonRounded, Phone, SchoolRounded} from '@material-ui/icons';\r\nimport PieChart from './PieChart';\r\nimport LineGraph from './LineGraph';\r\nimport GraphDialog from './GraphDialog';\r\nimport Email from './Email';\r\n\r\nfunction StudentPage(props:any) {\r\n    const Auth0 = useAuth0();\r\n    const controller = new StudentController();\r\n    const history = useHistory();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const [data, setData] = useState<Student>();\r\n    const [bigGraph, setBigGraph] = useState(\"\");\r\n    const [test, setTest] = useState(true);\r\n\r\n    useEffect(() => {        \r\n        fetchData();\r\n    },[])\r\n\r\n    async function fetchData(){        \r\n        const token = await Auth0.getAccessTokenSilently();\r\n        const response = await controller.GetStudent(props.match.params.student, token);\r\n        if(response){\r\n            setData(await response)\r\n        }else if(response == false){\r\n            history.push(\"/students\");\r\n            enqueueSnackbar('Student not found!', { variant: \"error\" });\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {data ? \r\n                <>\r\n                    {bigGraph ? \r\n                        <GraphDialog open={true} closeDialog={() => setBigGraph(\"\")}>\r\n                            {bigGraph === \"pie\" ?\r\n                                <div style={{ height: \"29rem\", width: \"100%\" }}>\r\n                                    <PieChart data={data.studentData}/>\r\n                                </div> \r\n                            : bigGraph === \"line\" ?\r\n                                <div style={{ height: \"29rem\", width: \"100%\" }}>\r\n                                    <LineGraph data={data.studentData}/>\r\n                                </div> \r\n                            :<></>\r\n                            }\r\n                        </GraphDialog>\r\n                        : \r\n                        <>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item style={{display: 'flex', width: '100%'}}>\r\n                                    <Avatar style={{ height: '70px', width: '70px', fontSize: '40px' }}>ML</Avatar>\r\n                                        <Grid container style={{width: '100%', justifyContent: 'space-between'}}>\r\n                                            <Grid xs={12} md={8} >\r\n                                                <Box style={{marginLeft: '2%'}}>\r\n                                                    <Typography>Student</Typography>\r\n                                                    <Typography>University of Sussex</Typography>\r\n                                                    <Typography>Registered</Typography>\r\n                                                </Box>\r\n                                            </Grid>\r\n                                            <Hidden smDown>\r\n                                                <Grid xs={12} md={4} style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                                                    <Box>\r\n                                                        <Typography>Last Contact: 01/02/2021</Typography>\r\n                                                    </Box>\r\n                                                </Grid>\r\n                                            </Hidden>\r\n                                            <Hidden mdUp>\r\n                                                <Grid xs={12} md={4} style={{display: 'flex',marginLeft: '2%', justifyContent: 'flex-start'}}>\r\n                                                    <Box>\r\n                                                        <Typography>Last Contact: 01/02/2021</Typography>\r\n                                                    </Box>\r\n                                                </Grid>\r\n                                            </Hidden>\r\n                                        </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {test ? <Email /> :\r\n                            <>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12} md={6}>\r\n                                <Card>\r\n                                    <Box style={{margin: '1rem'}}>\r\n                                        <Typography variant=\"subtitle1\">Course Details:</Typography>\r\n                                        <Grid container style={{margin: '2% 0'}}>\r\n                                            <PersonRounded />\r\n                                            <Typography style={{marginLeft: '1%'}}>#{data.userId}</Typography>\r\n                                        </Grid>\r\n                                        <Grid container>\r\n                                            <SchoolRounded />\r\n                                            <Typography style={{marginLeft: '1%'}}>{data.courseTitle} ({data.courseCode})</Typography>\r\n                                        </Grid>\r\n                                        <Grid container style={{margin: '2% 0'}}>\r\n                                            <Bookmark />\r\n                                            <Typography style={{marginLeft: '1%'}}>{data.studyLevel}</Typography>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Card>\r\n                                </Grid>\r\n                                <Grid item xs={12} md={6}>\r\n                                    <Card>\r\n                                        <Box style={{margin: '1rem'}}>\r\n                                            <Typography variant=\"subtitle1\">Contact Details:</Typography>\r\n                                            <Grid container style={{margin: '2% 0'}}>\r\n                                                <MailOutline />\r\n                                                <Typography style={{marginLeft: '1%'}} variant=\"body2\">ml553@sussex.ac.uk</Typography>\r\n                                            </Grid>\r\n                                            <Grid container >\r\n                                                <Phone />\r\n                                                <Typography style={{marginLeft: '1%'}} variant=\"body2\">+447305613249</Typography>\r\n                                            </Grid>\r\n                                        </Box>\r\n                                    </Card>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12} lg={6} >\r\n                                    <Card>\r\n                                        <Box style={{display: 'flex',justifyContent: 'flex-end'}}>\r\n                                            <ButtonBase onClick={() => setBigGraph(\"line\")}>\r\n                                                <Fullscreen />\r\n                                            </ButtonBase>\r\n                                        </Box>\r\n                                        <div style={{margin: '1rem'}}>\r\n                                            <Typography style={{textAlign: 'center', marginBottom: '2%'}} variant=\"h5\">Attendance By Period (%)</Typography>\r\n                                            <div style={{height: '19rem'}}>\r\n                                                <LineGraph data={data.studentData}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card>\r\n                                </Grid>\r\n                                <Grid item xs={12} lg={6} >\r\n                                    <Card>\r\n                                        <Box style={{display: 'flex',justifyContent: 'flex-end'}}>\r\n                                            <ButtonBase onClick={() => setBigGraph(\"pie\")}>\r\n                                                <Fullscreen />\r\n                                            </ButtonBase>\r\n                                        </Box>\r\n                                        <div style={{margin: '1rem'}}>\r\n                                            <Typography style={{textAlign: 'center', marginBottom: '2%'}} variant=\"h5\">Overall Attendance</Typography>\r\n                                            <div style={{height: '19rem' , width: '100%'}}>\r\n                                                <PieChart data={data.studentData}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card>\r\n                                </Grid>\r\n                            </Grid>\r\n                            </> }                   \r\n                        </>\r\n                    }\r\n                </>\r\n            :\r\n                <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}} color=\"secondary\">\r\n                    <CircularProgress size={100} />\r\n                </div>\r\n            }           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default StudentPage\r\n\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\LineGraph.tsx",["197","198"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\PieChart.tsx",["199","200"],"import { ResponsivePie } from \"@nivo/pie\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport StudentData from \"../models/StudentData\";\r\n\r\ninterface PieChartProps {\r\n  data: StudentData[]\r\n}\r\n\r\nexport default function PieChart(props: PieChartProps) {\r\n  const [data, setData] = useState([\r\n    {id: \"Attended\",label: \"Attended\", value: 0, color: \"hsl(174, 70%, 50%)\"},\r\n    {id: \"Teaching\",label: \"Teaching\", value: 0, color: \"hsl(204, 70%, 50%)\"},\r\n    {id: \"Explained\",label: \"Explained\", value: 0, color: \"hsl(234, 70%, 50%)\"},\r\n    {id: \"Non-Attended\",label: \"Non-Attended\", value: 0, color: \"hsl(254, 70%, 50%)\"}\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    props.data.map(item => {\r\n      setData(data => [\r\n        {id: \"Attended\",label: \"Attended\", value: data[0].value + item.attended, color: \"hsl(174, 70%, 50%)\"},\r\n        {id: \"Teaching\",label: \"Teaching\", value: data[1].value + item.teaching, color: \"hsl(204, 70%, 50%)\"},\r\n        {id: \"Explained\",label: \"Explained\", value: data[2].value + item.explained, color: \"hsl(234, 70%, 50%)\"},\r\n        {id: \"Non-Attended\",label: \"Non-Attended\", value: data[3].value + item.nonAttended, color: \"hsl(254, 70%, 50%)\"}\r\n      ])\r\n    })\r\n  },[])\r\n\r\n\r\n  return (\r\n      <ResponsivePie\r\n        data={data}\r\n        //@ts-ignore\r\n        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\r\n        enableRadialLabels={false}\r\n        sliceLabelsSkipAngle={1}\r\n        sliceLabelsTextColor=\"#ffffff\"\r\n        colors={{ scheme: \"category10\" }}\r\n        margin={{bottom:60,}}\r\n        legends={[\r\n          {\r\n              anchor: 'bottom',\r\n              direction: 'row',\r\n              justify: false,\r\n              translateX: 0,\r\n              translateY: 20,\r\n              itemWidth: 80,\r\n              itemHeight: 0,\r\n              itemsSpacing: 0,\r\n              symbolSize: 20,\r\n              itemDirection: 'left-to-right'\r\n          }\r\n      ]}\r\n      />\r\n  );\r\n}\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\views\\Courses.tsx",["201","202"],"import React, { useEffect, useState } from \"react\";\r\nimport { Box, ButtonBase, Chip, Divider, Drawer, Grid, SvgIcon, TextField, Typography, } from \"@material-ui/core\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport CourseResponse from \"../models/CourseResponse\";\r\nimport CourseController from \"../api/CourseController\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport CourseVisulisations from \"../components/CourseVisulisations\";\r\nimport CoursesStyles from \"../styles/CoursesStyles\";\r\nimport FilterIcon from \"../assets/FilterIcon\";\r\n\r\nconst Students = () => {\r\n  const Auth0 = useAuth0();\r\n  const [textInput, setTextInput] = useState('');\r\n  const [courses, setCourses] = useState<CourseResponse[]>();\r\n  const [chipData, setChipData] = useState<CourseResponse[]>([]);\r\n  const controller = new CourseController();\r\n  const classes = CoursesStyles();\r\n  const [filterDrawer, setFilterDrawer] = useState(false);\r\n\r\n  useEffect(() => {\r\n    GetCourses();\r\n  }, []);\r\n\r\n  const GetCourses = async () => {\r\n    const token = await Auth0.getAccessTokenSilently();\r\n    setCourses(await controller.GetAllCourses(token));\r\n  };\r\n\r\n  const handleCourseFilter = (course: CourseResponse | null) => {\r\n    if (course) {\r\n      const newCourses = courses?.filter(\r\n        (c) => c.courseCode !== course.courseCode\r\n      );\r\n      setCourses(newCourses);\r\n      setChipData((chipData) => [...chipData, course]);\r\n      setTextInput(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChipDelete = (course: CourseResponse) => {\r\n    setChipData(chipData.filter(c => c.courseCode !== course.courseCode));\r\n    let courseArr = [course];\r\n    let newCourses = [...courses!];\r\n    newCourses = courseArr.concat(newCourses);\r\n    setCourses(newCourses);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {courses ? (\r\n        <Grid container spacing={3}>\r\n          <Grid xs={12} className={classes.title}>\r\n            <Typography variant=\"h4\">Courses</Typography>\r\n          </Grid>\r\n          <Grid xs={12}>\r\n            <ButtonBase onClick={() => setFilterDrawer(true)}>\r\n              <FilterIcon />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Drawer variant=\"temporary\" anchor={\"right\"} \r\n            open={filterDrawer} \r\n            classes={{paper: classes.drawerPaper}} \r\n            onClose={() => setFilterDrawer(false)} \r\n          >\r\n            <Grid >\r\n              <Grid xs={12} className={classes.filterCoursesTitle}>\r\n                <Typography variant=\"h5\" align=\"center\">Filter Courses</Typography>\r\n              </Grid>\r\n              <Grid container xs={12} className={classes.search}>\r\n                <Autocomplete\r\n                  options={courses}\r\n                  getOptionLabel={(course) => course.courseTitle}\r\n                  className={classes.autoComplete}\r\n                  onChange={(event, value, reason) => handleCourseFilter(value ?? null)}\r\n                  renderInput={(params) => \r\n                    (\r\n                      <TextField {...params} label=\"Courses\" variant=\"outlined\" />\r\n                    )}\r\n                  inputValue={textInput}\r\n                />\r\n              </Grid>\r\n              <Divider />\r\n              <Box className={classes.chips}>\r\n                {chipData.map((course) => (\r\n                  <Chip label={course.courseTitle} className={classes.chipStyle}  onDelete={() => handleChipDelete(course)} />\r\n                  ))}\r\n              </Box>\r\n            </Grid>\r\n          </Drawer>\r\n          <CourseVisulisations courses={chipData}/>\r\n        </Grid>\r\n      ) : (\r\n        <div className={classes.loading} color=\"secondary\">\r\n          <CircularProgress size={100} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Students;\r\n","C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\config\\Theme.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\CourseController.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\CourseVisulisations.tsx",["203","204","205","206","207"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\CoursePie.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\CourseBar.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\HeatMap.tsx",["208","209"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\ScatterDiagram.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\GraphDialog.tsx",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\CoursesStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\StudentsStyles.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\components\\Email.tsx",["210"],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\api\\CommunicationController.ts",[],"C:\\Users\\Marion\\Desktop\\Attendance Pro\\AttendanceProSPA\\src\\styles\\StepperStyles.ts",[],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"211","replacedBy":"215"},{"ruleId":"213","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":24,"column":5,"nodeType":"219","endLine":24,"endColumn":32,"suggestions":"220"},{"ruleId":"217","severity":1,"message":"221","line":28,"column":5,"nodeType":"219","endLine":28,"endColumn":15,"suggestions":"222"},{"ruleId":"217","severity":1,"message":"223","line":20,"column":5,"nodeType":"219","endLine":20,"endColumn":7,"suggestions":"224"},{"ruleId":"211","replacedBy":"225"},{"ruleId":"213","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":1,"column":29,"nodeType":"229","messageId":"230","endLine":1,"endColumn":37},{"ruleId":"227","severity":1,"message":"231","line":5,"column":16,"nodeType":"229","messageId":"230","endLine":5,"endColumn":27},{"ruleId":"211","replacedBy":"232"},{"ruleId":"213","replacedBy":"233"},{"ruleId":"217","severity":1,"message":"234","line":46,"column":5,"nodeType":"219","endLine":46,"endColumn":7,"suggestions":"235"},{"ruleId":"227","severity":1,"message":"236","line":21,"column":18,"nodeType":"229","messageId":"230","endLine":21,"endColumn":25},{"ruleId":"217","severity":1,"message":"237","line":25,"column":7,"nodeType":"219","endLine":25,"endColumn":9,"suggestions":"238"},{"ruleId":"239","severity":1,"message":"240","line":32,"column":27,"nodeType":"241","messageId":"242","endLine":32,"endColumn":29},{"ruleId":"243","severity":1,"message":"244","line":14,"column":33,"nodeType":"245","messageId":"246","endLine":14,"endColumn":35},{"ruleId":"217","severity":1,"message":"247","line":17,"column":7,"nodeType":"219","endLine":17,"endColumn":9,"suggestions":"248"},{"ruleId":"243","severity":1,"message":"244","line":18,"column":25,"nodeType":"245","messageId":"246","endLine":18,"endColumn":27},{"ruleId":"217","severity":1,"message":"247","line":26,"column":5,"nodeType":"219","endLine":26,"endColumn":7,"suggestions":"249"},{"ruleId":"227","severity":1,"message":"250","line":2,"column":56,"nodeType":"229","messageId":"230","endLine":2,"endColumn":63},{"ruleId":"217","severity":1,"message":"251","line":23,"column":6,"nodeType":"219","endLine":23,"endColumn":8,"suggestions":"252"},{"ruleId":"227","severity":1,"message":"253","line":15,"column":10,"nodeType":"229","messageId":"230","endLine":15,"endColumn":21},{"ruleId":"217","severity":1,"message":"254","line":39,"column":6,"nodeType":"219","endLine":39,"endColumn":21,"suggestions":"255"},{"ruleId":"243","severity":1,"message":"244","line":54,"column":35,"nodeType":"245","messageId":"246","endLine":54,"endColumn":37},{"ruleId":"243","severity":1,"message":"244","line":58,"column":36,"nodeType":"245","messageId":"246","endLine":58,"endColumn":38},{"ruleId":"243","severity":1,"message":"244","line":80,"column":26,"nodeType":"245","messageId":"246","endLine":80,"endColumn":28},{"ruleId":"243","severity":1,"message":"244","line":16,"column":27,"nodeType":"245","messageId":"246","endLine":16,"endColumn":29},{"ruleId":"243","severity":1,"message":"244","line":18,"column":37,"nodeType":"245","messageId":"246","endLine":18,"endColumn":39},{"ruleId":"217","severity":1,"message":"256","line":19,"column":5,"nodeType":"219","endLine":19,"endColumn":7,"suggestions":"257"},"no-native-reassign",["258"],"no-negated-in-lhs",["259"],["258"],["259"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GetStudents' and 'setPagesCount'. Either include them or remove the dependency array.","ArrayExpression",["260"],"React Hook useEffect has a missing dependency: 'GetStudents'. Either include it or remove the dependency array.",["261"],"React Hook useEffect has a missing dependency: 'Auth0'. Either include it or remove the dependency array.",["262"],["258"],["259"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ParseResult' is defined but never used.",["258"],["259"],"React Hook useEffect has a missing dependency: 'uploadContext.uploadedData'. Either include it or remove the dependency array.",["263"],"'setTest' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["264"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array.",["265"],["266"],"'SvgIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'GetCourses'. Either include it or remove the dependency array.",["267"],"'AspectRatio' is defined but never used.","React Hook useEffect has missing dependencies: 'GetAbsenceReasons', 'GetAttendanceByPeriod', and 'getAttendedByTeachingSessionsData'. Either include them or remove the dependency array.",["268"],"React Hook useEffect has a missing dependency: 'GetEmails'. Either include it or remove the dependency array.",["269"],"no-global-assign","no-unsafe-negation",{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"280","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},"Update the dependencies array to be: [GetStudents, appContext.searchBarValue, setPagesCount]",{"range":"289","text":"290"},"Update the dependencies array to be: [GetStudents, currPage]",{"range":"291","text":"292"},"Update the dependencies array to be: [Auth0]",{"range":"293","text":"294"},"Update the dependencies array to be: [uploadContext.uploadedData]",{"range":"295","text":"296"},"Update the dependencies array to be: [fetchData]",{"range":"297","text":"298"},"Update the dependencies array to be: [props.data]",{"range":"299","text":"300"},{"range":"301","text":"300"},"Update the dependencies array to be: [GetCourses]",{"range":"302","text":"303"},"Update the dependencies array to be: [GetAbsenceReasons, GetAttendanceByPeriod, getAttendedByTeachingSessionsData, props.courses]",{"range":"304","text":"305"},"Update the dependencies array to be: [GetEmails]",{"range":"306","text":"307"},[1002,1029],"[GetStudents, appContext.searchBarValue, setPagesCount]",[1080,1090],"[GetStudents, currPage]",[811,813],"[Auth0]",[2200,2202],"[uploadContext.uploadedData]",[1063,1065],"[fetchData]",[639,641],"[props.data]",[1197,1199],[1056,1058],"[GetCourses]",[1733,1748],"[GetAbsenceReasons, GetAttendanceByPeriod, getAttendedByTeachingSessionsData, props.courses]",[872,874],"[GetEmails]"]